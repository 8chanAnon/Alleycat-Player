<!DOCTYPE html>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">

<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="referrer" content="no-referrer">

<title>Alleycat Player</title>

<style type="text/css">

body {
  font-size: 16px; line-height: 19px;
  font-family: 'times new roman', serif; 
  color: maroon; background-color: navajowhite;
}

.widevid {
  position: relative; overflow: hidden;
  width: 736px; height: 414px;
  border: 2px solid red; background-color: indigo;
}

.widevid img {
  top: 0; left: 0; right: 0; bottom: 0;
  position: absolute; width: 100%;
  height: auto; margin: auto; border: none;
}

.widevid:fullscreen {
  border: none;
}

.msgbox {
  position: absolute; top: 35%; left: 40%; right: 40%; display: block;
  text-align: center; border-radius: 10px;
  color: paleturquoise; background-color: slateblue;
  font-style: italic; cursor: pointer;
}

iframe {
  width: 100%; height: 100%;
  position: absolute; border: none;
  background-color: transparent;
  pointer-events: none;
}

.popbox {
  z-index: -1; width: 100%; height: 100%;
  position: absolute; pointer-events: none;
}

.popbox table {
  width: 100%; border:none; margin: 0; table-layout: fixed;
}

.popbox td {
  padding: 6px 8px 2px 8px;
}

.popbox button {
  width: 100%; height: auto;
  text-align: left; text-overflow: ellipsis;
  white-space: nowrap; overflow: hidden;
  font-size: 12px; line-height: 14px;
  font-family: 'segoe ui', serif;
  padding: 2px 5px 2px 5px; border-width: 1px;
  color: maroon; pointer-events: auto;
}

.ranger button {
  vertical-align: top; height: 22px;
  font-size: 13px; line-height: 19px;
  padding: 0px 4px 2px 4px; margin-top: 1px;
  color: darkred; background-color: lavenderblush;
}

.ranger input {
  width: 60px;
}

input {
  height: 17px; font-size: 13px; position: relative; display: inline-block;
  font-family: 'helvetica', sans-serif;
  border-width: 2px; border-style: solid;
  border-color: tan lemonchiffon lemonchiffon burlywood;
  padding: 3px 5px 1px 5px; caret-color: navy;
}

input[type=radio] {
  vertical-align: bottom; margin: 0 1px 1px 2px;
  filter: contrast(1.2) brightness(1.2) opacity(85%);
}

input[type=checkbox] {
  vertical-align: bottom; margin: 1px 2px 1px 2px;
  filter: contrast(1.2) brightness(1.2) opacity(85%);
}

input.idspec {
  width: 100%; margin: -4px 0 -2px -8px;
  color: sienna; background-color: cornsilk;
}

input.urlspec {
  width: 65%; margin: 0 1px 0 4px; padding: 4px 6px 3px 6px;
  color: slateblue; background-color: cornsilk;
}

input.static {
  margin: 0 1px 0 2px; padding: 3px 0 3px 0;
  text-align: center; border: 1px solid sandybrown;
  color: firebrick; background-color: papayawhip;
}

.dropbox {
  width: 100%; position: relative;
  display: inline-block; white-space: nowrap;
  color: firebrick; background-color: papayawhip;
}

.dropbox input {
  vertical-align: top;
  width: calc(100% - 32px); margin: -2px 0 -2px 0;
  color: inherit; background-color: inherit;
}

.dropbox button {
  vertical-align: top; width: 24px; height: 25px;
  font-size: 16px; line-height: 17px;
  margin: -2px 0 -2px 0; padding: 0 0 4px 0;
  font-family: 'segoe ui', serif; font-weight: bold;
  border-width: 2px; border-style: solid;
  border-color: tan lemonchiffon lemonchiffon burlywood;
  color: indianred; background-color: mistyrose;
}

.dropbox0 {
  color: sienna; background-color: cornsilk;
}

.dropbox1 {
  max-width: 320px; width: calc(100% + 9px); margin-left: -8px;
}

.dropbox2 {
  max-width: 270px; width: calc(100% + 9px);
  margin-left: -8px; margin-bottom: 1px; color: red;
}

.dropbox3 {
  width: 140px; margin-left: -8px; margin-bottom: -1px;
}

.dropdown {
  z-index: 2; max-height: 50vh;
  position: absolute; display: none;
  overflow-x: hidden; overflow-y: auto;
  margin: 4px 0 0 1px; outline: 1px solid peru;
  border-top: 3px solid transparent;
  border-bottom: 3px solid transparent;
  font-size: 13.5px; font-style: normal; font-weight: normal;
  font-family: 'consolas', 'lucida console', monospace;
  color: darkgreen; background-color: ivory; cursor: default;
}

.dropdown option {
  height: 15px; min-height: 15px; max-height: 15px;
  line-height: 15px; position: relative; text-align: left;
  margin: 0 3px 0 3px; padding: 0 22px 0 6px;
}

.dropdown0 {
}

.dropdown1 {
  max-height: calc(28 * 15px);
}

.dropdown2 {
  max-height: calc(26 * 15px);
}

.dropdown3 {
}

.pickpanel {
  z-index: 0; width: 166px; height: auto;
  position: relative; display: inline-block;
  overflow: hidden; margin: -1px 0 -2px 0; padding: 2px;
  outline: 1px solid thistle; border: 2px solid skyblue;
  color: mediumvioletred; background-color: cornsilk;
}

.pickpanel option {
  text-align: center; margin: 0; padding: 0 0 0 8px;
}

span.box {
  padding: 4px 3px 2px 2px;
  outline: 1px solid lightsteelblue;
}

th {
  border: 2px solid lightsalmon;
  color:crimson; background-color: pink;
}

table {
  border: 3px solid green;
}

table.list {
  border: 2px solid olivedrab;
}

td {
  font-size: 14px; line-height: 13px;
  padding: 0 4px 0 6px; color: saddlebrown;
  text-align: left; vertical-align: top;
}

td.textbox {
  font-size: 14px; line-height: 17px;
  width: 30vw; padding: 0 17px 0 17px;
  text-align: center; white-space: nowrap;
}

td.vidbox {
  font-size: 15px; line-height: normal;
  padding: 0 0 0 2px; vertical-align: middle;
  border-left: 1px solid firebrick;
}

td.grill {
  width: 35vw; margin: 0; padding: 0;
  vertical-align: middle; text-align: center;
  background: radial-gradient(goldenrod 15%,transparent 40%);
  background-size: 12px 6px; border-left: 1px solid firebrick;
}

button {
  width: auto; height: auto;
  font-size: 12px; line-height: 18px;
  padding: 1px 6px 0 6px; margin: 0;
  font-family: 'helvetica', sans-serif;
  color: darkblue; background-color: powderblue;
  border-color: gainsboro;
}

button.is_off {
  margin: 2px 0 -1px 0;
  border-style: outset;
  background-color: pink;
}

button.is_on {
  margin: 2px 0 -1px 0;
  border-style: inset;
  background-color: lightgreen;
}

button.wrapper {
  width: 60px; height: 18px; font-size: 13px; line-height: 16px;
  margin: 1px -1px 0 -1px; padding: 0; border: 1px solid gold;
  color: red; background-color: blanchedalmond;
}

button.stack {
  font-size: 19px; line-height: 22px;
  padding: 2px 10px 2px 10px; background-color: pink;
}

h3 {
  vertical-align: top; padding-top: 5px; margin-bottom: 10px;
}

ul {
  padding: 0 1em 0 1em; list-style: square;
}

li {
  margin: 5px 0 5px 0;
}

.ir input {
  height: 17px; margin: 2px 5px -2px -1px;
}

.ir a {
  color: crimson; text-decoration: none;
}

::selection {
  color: yellow; background-color: orchid;
}

option:hover {
  color: yellow; background-color: orchid;
}

.mark {
  background-color: lightgray;
}

.show {
  display: block;
}

.r { color: crimson; }
.g { color: seagreen; }
.b { color: blue; }
.w { color: #A02000; }

r_ { color: crimson; }
g_ { color: seagreen; }
b_ { color: blue; }
w_ { color: #A02000; }

</style></head>

<body onload="javascript:load_all()" onunload="javascript:dump_all()" onresize="javascript:resize_all()" onclick="javascript:MEOW(event)" onkeydown="javascript:MEOW(event)">

<h1><g_>A<r_>ll<g_>ey<r_>cat <g_>Pl<r_>ay<g_>er <w_><small>-- demo version (June 30, 2020)</small></w_></g_></r_></g_></r_></g_></r_></g_></h1>

<p></p><hr><p>

</p><div><g_>Pick a Proxy:</g_>&nbsp;
<div class="dropbox dropbox0" style="width:300px"><input type="text" disabled="disabled" value="Local Proxy Server (Kraker)  "><button>+</button>
<div id="proxy" class="dropdown dropdown0">
  <option value="http://35.210.173.135/" class="b">35.210.173.135 **
  </option><option value="https://xyss5.herokuapp.com/" class="b">xyss5.herokuapp.com *
  </option><option value="https://fathomless-cliffs-85079.herokuapp.com/" class="b">fathomless-cliffs-85079.herokuapp.com *
  </option><option value="LOCAL://localhost:8080/" class="r mark" checked="">Local Proxy Server (Kraker)
  </option><option value="https://cors-anywhere.herokuapp.com/">cors-anywhere.herokuapp.com
  </option><option value="https://bypasscors.herokuapp.com/api/?url=">bypasscors.herokuapp.com
  </option><option value="https://api.allorigins.win/raw?url=">api.allorigins.win
  </option><option value="">None
</option></div></div>
<b>&nbsp; &nbsp; &nbsp; Go to <a href="#info">Video Viewer</a></b>
</div>

<p></p><hr><p>
<b>Instruction Manuals (<r_>archive.org</r_>) -- </b>
<a href="https://archive.org/download/alleycat-player/installation-v1.htm" target="_blank">Installation</a> --
<a href="https://archive.org/download/alleycat-player/manual-alleycat-v1.htm" target="_blank">Alleycat Player</a> --
<a href="https://archive.org/download/alleycat-player/manual-kraker-v1.htm" target="_blank">Local Proxy Server</a>
</p><p>
If you have not installed the <b>Kraker Local Proxy Server</b> then please go read the Installation Manual.
</p><p>
<b><b_>Your feedback is appreciated (suggestions or bug reports):</b_></b>&nbsp;
<a target="_blank" href="https://8kun.top/alleycat/catalog.html">Alleycat BBS</a>

</p><p></p><hr><p>
This application is a reduced implementation of Alleycat Player. Only YouTube, BitChute and Vimeo are supported.
<br>
Internet TV is included but only a handful of channels. Also Internet Radio. There is just one video viewer instead of three.
</p><p>
Press the "<b>End</b>" key to go to the bottom of the page. Click a radio button to <b>play the radio</b>.<br>

</p><p></p><hr><p>
Alleycat Player is updated every one to four weeks because links break and web sites change.
</p><p>
<b>Get the latest version here:</b>&nbsp;
<a href="https://archive.org/details/alleycat-player">https://archive.org/details/alleycat-player</a>

</p><div style="width: 90vw; height: 50vh"></div>

<!--
/////////////////////////////
///// DEMO VIDEO VIEWER /////
/////////////////////////////
//-->

<h3 id="info"><r_>Demonstration Video Viewer</r_>
  <small>&nbsp; | &nbsp; <a href="#info">snap</a> &nbsp; &nbsp;

<div class="dropbox dropbox0" style="width:160px"><input type="text" disabled="disabled" value="Youtube DASH"><button>+</button>
<div id="ctr5z" class="dropdown dropdown0">
  <option value="11">youtube.com
  </option><option value="1" class="b">invidio.us
  </option><option value="2" class="b">invidious.snopyta.org
  </option><option value="10" class="r mark" checked="">Youtube DASH
</option></div></div> &nbsp;

<span class="ranger" style="white-space: nowrap"> &nbsp; &nbsp;
<button onclick="javascript:brightness(5,1)">&lt;</button>
<input type="text" value="Brt:  0" id="ctr5x" class="static" disabled="disabled">
<button onclick="javascript:brightness(5,2)">&gt;</button> &nbsp; &nbsp;
<button onclick="javascript:brightness(5,3)">&lt;</button>
<input type="text" value="Sat:  0" id="ctr5y" class="static" disabled="disabled">
<button onclick="javascript:brightness(5,4)">&gt;</button> &nbsp; &nbsp;
<button onclick="javascript:brightness(5,5)">&nbsp;Reset&nbsp;</button>
</span>
</small></h3>

<table><tbody><tr><td class="textbox">

<button onclick="javascript:open_downloader()"><b_>DLoad</b_></button>
<button onclick="javascript:loadid(5,0)">Play ID</button>
<button onclick="javascript:reset_frame(5)">Clear</button>
<p></p>

<input type="text" id="id5" maxlength="256" class="idspec" onfocus="javascript:hidelist(5)" onclick="javascript:input_onclick('id5')" onblur="javascript:input_onblur('id5')">
<p></p>

<div class="dropbox dropbox1"><input type="text" disabled="disabled" value="Select a video stack"><button>+</button>
<div id="stk5" class="dropdown dropdown1">
  <option value="" class="w mark">Select a video stack
</option></div></div>
<p></p>

<div class="dropbox dropbox2"><input type="text" disabled="disabled" value="YouTube / Invidious  "><button>+</button>
<div id="src5" class="dropdown dropdown2">
  <option value="0" class="w mark">YouTube / Invidious
  </option><option value="1"># mp4 - BitChute
  </option><option value="2"># mp4 - Vimeo
</option></div></div>

<p><span class="box">
<input type="checkbox" id="mov5f" checked="checked"> Format (m3u8) &nbsp;
<input type="checkbox" id="mov5p" checked="checked"> Use Proxy
</span></p>

<div><div id="fmt5" class="dropdown pickpanel">
  <option value="18" class="mark">&nbsp;mp4 [18] 360p &nbsp;*
  </option><option value="19">&nbsp;mp4 [19] 480p &nbsp;*
  </option><option value="22">&nbsp;mp4 [22] 720p &nbsp;*
  </option><option value="43">webm [43] 360p &nbsp;*
  </option><option value="44">webm [44] 480p &nbsp;*
  </option><option value="45">webm [45] 720p &nbsp;*
</option></div></div>
<p></p>

<div class="dropbox dropbox3"><input type="text" disabled="disabled" value="[16:9]&nbsp; 320 x 180  "><button>+</button>
<div id="win5" class="dropdown dropdown3">
  <option value="320:180" class="mark">[16:9]&nbsp; 320 x 180
  </option><option value="480:270">[16:9]&nbsp; 480 x 270
  </option><option value="640:360">[16:9]&nbsp; 640 x 360
  </option><option value="960:540">[16:9]&nbsp; 960 x 540
  </option><option value="1280:720">[16:9] 1280 x 720
  </option><option value="240:180">&nbsp;[4:3]&nbsp; 240 x 180
  </option><option value="360:270">&nbsp;[4:3]&nbsp; 360 x 270
  </option><option value="480:360">&nbsp;[4:3]&nbsp; 480 x 360
  </option><option value="720:540">&nbsp;[4:3]&nbsp; 720 x 540
  </option><option value="960:720">&nbsp;[4:3]&nbsp; 960 x 720
</option></div></div>
<p></p>

<button id="btn5a" class="is_off" onclick="javascript:buttonpress(5,0)">New Window</button> &nbsp;&nbsp;
<button id="btn5b" class="is_off" onclick="javascript:buttonpress(5,1)">Popup Window</button>
<p style="margin-top:-1px"></p>

<input type="checkbox" id="mov5m"> Allow Multiple &nbsp;&nbsp;
<input type="checkbox" id="mov5n"> No Play
<p style="margin-top:-2px"></p>

<input type="radio" id="mov5a" name="chk5"> Raw&nbsp;
<input type="radio" id="mov5b" name="chk5" checked="checked"><button onclick="javascript:toggle_hls(5,0)" class="wrapper" id="hls5">Wrapper</button><input type="radio" id="mov5c" name="chk5"> Sandbox

</td><td class="vidbox">

<!-- VIDEO -->
<div class="widevid"><div class="popbox" id="pop5"></div>
<h2 id="vid5" class="msgbox" onclick="javascript:popper(5,1)">No Video</h2>
<iframe id="mov5" name="mov5" sandbox="allow-scripts allow-same-origin allow-forms" autoplay="" allowfullscreen="" controls="" referrerpolicy="no-referrer"></iframe>

</div></td><td class="grill" style="width: 0px; min-width: 0px;"></td></tr></tbody></table>

<p style="text-align:center">
<button onclick="javascript:loadid(5,1)">Play URL</button>
<button onclick="javascript:urlcopy(5)">Copy</button>
<button onclick="javascript:digid(5)"><b_>DIG</b_></button>

<input type="text" id="line5" maxlength="2048" class="urlspec" onclick="javascript:input_onclick('line5')" onblur="javascript:input_onblur('line5')">

<input type="text" id="meta5" class="static" disabled="disabled" style="width:85px">

</p><p style="text-align:center">
<button class="stack" id="stk5-1" onclick="javascript:copylist(5,1)">Stack 1</button>
<button class="stack" id="stk5-2" onclick="javascript:copylist(5,2)">Stack 2</button>
<button class="stack" id="stk5-3" onclick="javascript:copylist(5,3)">Stack 3</button>
&nbsp;
<button class="stack" id="stk5-4" onclick="javascript:copylist(5,4)">BitChute</button>
<button class="stack" id="stk5-5" onclick="javascript:copylist(5,5)">Vimeo</button>
&nbsp;
<button class="stack" id="stk5-6" onclick="javascript:copylist(5,6)">Music TV</button>
<button class="stack" id="stk5-7" onclick="javascript:copylist(5,7)">News TV</button>
</p>

<div style="width: 90vw; height: 50vh"></div>

<!--
//////////////////////////
///// INTERNET RADIO /////
//////////////////////////
//-->

<h1 style="text-align:center"><r_>Internet Radio</r_></h1>

<div align="center">
<button onclick="javascript:ir_action(0)">Stop</button>
<button onclick="javascript:ir_action(1)">Pause</button>
<button onclick="javascript:ir_action(2)">Play</button>&nbsp;
<input type="text" value="Stopped" size="9" class="static" id="ir_status" disabled="disabled">&nbsp;
<button onclick="javascript:ir_action(3)" class="is_off" id="ir_popup">Popup</button>
&nbsp; <r_>Volume</r_> :&nbsp;
<button onclick="javascript:ir_action(4)" style="font-size:13px;padding-top:0">&lt;</button>
<input type="text" value="50" size="3" class="static" id="ir_volume" disabled="disabled">
<button onclick="javascript:ir_action(5)" style="font-size:13px;padding-top:0">&gt;</button>
</div>
<p>
</p><table class="list ir" style="width:100%;margin-top:-2px;padding-bottom:2px">

 <tbody><tr><th>Talk Radio
</th><th>Cool Music
</th><th>Funky Music
</th><th>Just Garbage
</th><th>More Garbage
</th></tr><tr>

<td><input type="radio" name="ir" onclick="javascript:radio
  ('https://streaming-ent.shoutcast.com/foxnews')"><a target="_blank" href="https://radio.foxnews.com/">Fox News Talk</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://radio.talkradio.co.uk/stream')"><a target="_blank" href="https://radio2you.co.uk/talkradio/schedule">Talk Radio UK</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://17813.live.streamtheworld.com/KTIEAM_SC')"><a target="_blank" href="https://am590theanswer.com/">Conservative Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://216.240.133.178:3005/;')"><a target="_blank" href="http://republicbroadcasting.org/program-schedule/">Republic Broadcasting</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://mediaserver3.afa.net:8443/talk.mp3')"><a target="_blank" href="https://afr.net/podcasts/afr-program-lineup/">American Family Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://edge2-b.exa.live365.net/a81754')"><a target="_blank" href="https://www.goodtalkradio.com/radio-program-schedule/">Good Talk Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://stream.infowars.com/;')"><a target="_blank" href="https://www.infowars.com/watch-alex-jones-show/">InfoWars Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://18593.live.streamtheworld.com/BLZE_1AAC.aac')"><a target="_blank" href="https://www.theblaze.com/st/radio">The Blaze Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://s2.radio.co/s572ad25f7/listen')"><a target="_blank" href="http://redstatetalkradio.com/radio-schedule/">Red State Talk</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://streamer.radio.co/s43edd6852/listen')"><a target="_blank" href="https://thefringe.fm/schedule/">The Fringe FM</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://tfrlive.net:8000/stream')"><a target="_blank" href="https://tfrlive.com/listen-live/">Truth Frequency Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://live1.darkmatterdigitalnetwork.com:8303/stream')"><a target="_blank" href="http://darkmatterdigitalnetwork.com/">Dark Matter Digital</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://darnwi.com:8000/stream')"><a target="_blank" href="http://darnwi.com/live-stream-2/">Devil's Advocates Radio</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://ice8.securenetsystems.net/VARIETY')"><a target="_blank" href="https://www.voiceamerica.com/#home-schedule">Voice America</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://cast.bbstalkradio.com/proxy/bbsradio?mp=/stream')"><a target="_blank" href="https://bbsradio.com/station1and2schedule">BBS Talk Radio 1</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('https://cast.bbstalkradio.com/proxy/bbsradio2?mp=/stream')"><a target="_blank" href="https://bbsradio.com/station1and2schedule">BBS Talk Radio 2</a>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
</td>

<td><input type="radio" name="ir" onclick="javascript:radio
  ('http://85.25.43.55/rock_classics.mp3')">Star FM Rock Classics
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://91.121.222.81:8416/listen.mp3')">Rock Radio Beograd
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://shoutcastunlimited.com:8890/;')">Lynx Classic Rock
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://jamfm.hoerradar.de/jamfm-mp3-128')">Jam FM Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://62.210.10.4:8928/stream/1/')">Gem Radio New Wave
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://149.56.183.178:8090/;')">Retro Hits
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://stream.dancewave.online:8080/dance.mp3')">Dance Wave
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://192.99.18.107:8106/;')">Salsa Mexico
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://streamingp.shoutcast.com/hotmixradio-dance-128.mp3')">Hot Mix Dance
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://nl1.lounge-radio.com:8010/;')">Lounge Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://fr3.1mix.co.uk:8000/stats/;')">1Mix Radio Trance
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://centova.radioservers.biz:8021/;')">Starlite Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
</td>

<td><input type="radio" name="ir" onclick="javascript:radio
  ('http://virtualdjradio.com:8000/channel1.mp3')">Virtual DJ: ClubZone
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://virtualdjradio.com:8000/channel2.mp3')">Virtual DJ: TheGrind
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://virtualdjradio.com:8000/channel3.mp3')">Virtual DJ: Hypnotica
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://virtualdjradio.com:8000/channel4.mp3')">Virtual DJ: PowerBase
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://janus.cdnstream.com:5140/live')">Radio Free Americana
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://sc01.warpradio.com:8212/;')">Smooth Jazz Expressions
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://109.123.116.202:8016/;')">Venice Classic Radio Italia
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://tropicalisima.org:9002/;')">Tropicalisma FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://lin3.ash.fastserv.com:6026/stream_96')">Rockabilly Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://91.121.91.172:9414/;stream/1')">Dandelion Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://hi.entranced.fm:80/;')">Entranced FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://46.105.118.14:17500/;')">Spexx FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
</td>

<td><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio1_mf_q')">BBC Radio 1
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio1xtra_mf_q')">BBC Radio 1-Extra
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio2_mf_q')">BBC Radio 2
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio3_mf_q')">BBC Radio 3
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio4fm_mf_q')">BBC Radio 4
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio4extra_mf_q')">BBC Radio 4-Extra
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_radio5live_mf_q')">BBC Radio 5-Live
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bbcmedia.ic.llnwd.net/stream/bbcmedia_6music_mf_p')">BBC Radio 6-Music
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://server-14.stream-server.nl:8300/;')">Nashville FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://shoutcast.countrypowerstation.net:8000/;')">Country Power Station
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://streamingp.shoutcast.com/hotmixradio-hiphop-128.mp3')">Hot Mix Hip-hop
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://s10.voscast.com:8872/;')">Wu World Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('8tilKaOINmE')"><g_>Danheim: <i>Mannavegr</i></g_>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('RM_J5cFy70M')"><g_>Audiomachine: <i>Decimus</i></g_>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('w6MiJUTZ6n8')"><g_>Classic Rock - Greatest Hits</g_>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
</td>

<td><input type="radio" name="ir" onclick="javascript:radio
  ('https://el-dorado.stream.laut.fm/el-dorado')">Radio El Dorado
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://111.223.51.7:8000/;stream/1/')">COOL fahrenheit
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://bluford.torontocast.com:8519/;')">Asia Dream Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://hi5.streamingsoundtracks.com:80/;')">Streaming Sound Tracks
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://136.0.17.26:8000/;')">Radio Africa Online
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://195.154.217.103:8123/;')">Radio Mi Amigo Int'l
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://jakarta.nagaswarafm.com:8088/stream')">Nagaswara FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://46.105.118.14:7550/;')">BeMyRadio Schlager
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://174.37.159.206:8118/;')">iRie Rockers
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://162.244.80.106:8108/;')">Tune Disney Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://94.23.148.11:8130/;')">SRC FM
<br><input type="radio" name="ir" onclick="javascript:radio
  ('http://217.146.71.146:8000/live2')">Rahva Radio
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
<br><input type="radio" name="ir" onclick="javascript:radio
  ('JMmpmHdnXK4')"><g_>Creedence Clearwater Revival</g_>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('kW0Fy88ilEs')"><g_>Beatles: <i>White Album</i></g_>
<br><input type="radio" name="ir" onclick="javascript:radio
  ('')">
</td>

</tr></tbody></table>

<div style="font-size:8px" align="center">
<p><audio id="internet_radio" controls="controls" style="width:85vw;height:45px" onerror="javascript:ir_action(-2)"></audio>

</p><p><input type="text" class="urlspec" id="ir_url" onclick="javascript:input_onclick('ir_url')" onblur="javascript:input_onblur('ir_url')">

</p><p style="font-size:initial">
<a href="#info">Video Viewer</a>

</p></div><div style="width:90vw;height:calc((100vh - 636px) * 0.55)"></div>



<script>

/////////////////////////
///// User Settings /////
/////////////////////////

var invidious_site = [
  "https://invidio.us",			// default
  "https://invidio.us",
  "https://invidious.snopyta.org"
];

var invidious_url = invidious_site [0];

var list_1 = [
    ":NOZKLtIIUZE" , "Hitler Rant"
  , ":m_MaJDK3VNE" , "Herding Cats"
  , ":hTa1t_9HfFQ" , "Mike Hammer"
  , ":uaPKEbVypRQ" , "Typing Lesson"
  , ":0fDOdzY18XE" , "V - The Miniseries"
  , ":kJAsn_vJyY4" , "Starship Enterprise"
];

var list_2 = [
    ":We-HMZDSWFU" , "Me and You and a Dog Named Boo"
  , ":8Pa9x9fZBtY" , "Sultans of Swing"
  , ":6Ath-3JGk8M" , "Flashdance: What A Feeling"
  , ":onJspmvJr0E" , "Flashdance: Love's Theme"
  , ":FnV0LqHd3h8" , "Make America Great Again"
  , ":xB4iFysPm9Q" , "Karolina Protsenko"
];

var list_3 = [
    ":8sPWIrF0oSY" , "Jack Benny meets Perry Mason"
  , ":CGq8Ee2gOe4" , "DooM at QuakeCon"
  , ":5iV_hB08Uns" , "Boston Dynamics Robot"
  , ":0pKfxbCHLoU" , "AKB48: Sustainable"
  , ":rqU_gsBYdr0" , "Ajisai Al Ai Monogatani"
];

var list_4 = [
    "b:fmOZPrv27xs"  , "Dil Jaaniye"
  , "b:6wNFJIbTxNk"  , "Batla House"
  , "b:sSKnCoWAbDos" , "Brother Nathaniel"
  , "b:A7jZJfaEJK2p" , "Malice in the Palace"
  , "b:Ol2plIF2otcI" , "QAnon Proofs"
];

var list_5 = [
    "v:129463420" , "Miniatur Wunderland"
  , "v:166403522" , "Some Kind of Quest"
  , "v:31883614"  , "Star Trek: Aurora"
  , "v:322694559" , "Great Martian War"
  , "v:175806163" , "Martian American"
];

var list_6 = [
    "?/1/540.1/0 8:https://www.djing.com/tv/animation.m3u8"			, "DJing: Animation (UK)"
  , "?/1/540.1/0 8:https://www.djing.com/tv/underground.m3u8"			, "DJing: Underground (UK)"
  , "?8:http://186.155.200.118:1935/live/MelodyChannel/playlist.m3u8"		, "Melody Channel (Colombia)"
  , "?8:http://capital_tv-lh.akamaihd.net/i/CapitalTv_1@183098/master.m3u8"	, "Radio Capital (Italy)"
  , "?/0/576.1/0 7:https://stream-33.mazana.tv:443/slagr2.m3u"			, "Slagr 2 (Czech Republic)"
  , "?8:http://live.stranafm.cdnvideo.ru/stranafm/smil:stranafm.smil/playlist.m3u8" , "Strana FM (Russia)"
  , "?/1/504.1/1 8:http://vcndstv.teleosmedia.com/stream/dstv/sunburn/playlist.m3u8" , "Sunburn TV (US)"
  , "?8:https://content.uplynk.com/channel/36953f5b6546464590d2fcd954bc89cf.m3u8" , "VH-1 (Europe-UK)"
];

var list_7 = [
    "?8:https://content.uplynk.com/channel/3324f2467c414329b3b0cc5cd987b6be.m3u8" , "ABC News"
  , "?8:http://cbsn-us-cedexis.cbsnstream.cbsnews.com/out/v1/55a8648e8f134e82a470f83d562deeca/master.m3u8" , "CBS News"
  , "?8:https://dai2.xumo.com/amagi_hls_data_xumo1212A-xumo-nbcnewsnow/CDN/master.m3u8" , "NBC News"
  , "?/0.1/0.1/0.1 7:https://freespeech.akamaized.net/hls/live/2016712/live2/playlist.m3u8" , "InfoWars - Alex Jones"
  , "?/0.1/0.1/0.1 7:https://freespeech.akamaized.net/hls/live/2016873/live3/playlist.m3u8" , "InfoWars - David Knight"
  , "?/0.1/0.1/0.1 7:https://freespeech.akamaized.net/hls/live/2016873/live4/playlist.m3u8" , "InfoWars - Owen Shroyer"
  , "?8:https://live-hls-web-aje.getaj.net/AJE/index.m3u8"			, "Al Jazeera"
  , "?8:http://rt-news-gd.secure2.footprint.net/1103.m3u8"			, "RT News"
];

var list_8 = [
];

var list_9 = [
];

////////////////////////////////
///// End of User Settings /////
////////////////////////////////

var head = "<!DOCTYPE html><html><head><meta charset='utf-8'>" +
           "<title>Downloader</title></head><body><h2>Downloader</h2>";

var tail = "</body></html>", download_doc = head + tail;

var last_h = last_w = last_raw = last_time = the_time = busy = 0;
var cors_bypass = cors_kraker = error = "", vidwin = null;
var freetv = new Object (), cookies = new Object ();

var localhost, response, textData, jsonData, event_time, dropdown, dloading;

var dump_all = function ()
{
  // shut down streams
  clear_video (5); ir_action (0);
  // destroy iframes so browser won't try to reload them on page refresh
  clear_frame (5);
}
////////////////////

var clear_frame = function (frame)
{
  var win = document.getElementById ("mov" + frame); win.parentNode.removeChild (win);
}
////////////////////

var load_all = function ()
{
  init_box ("proxy"); load_boxes (5); resize_all ();

  if (!(localhost = document.location.hostname == "localhost")) alert (
    "The origin of this document is not the preferred origin (http://localhost).\n\n" +
    "This app might not work as intended and some features may be unavailable.\n\n" +
    "Trust the Plan -- WWG1WGA -- Where We Go On We Go All");
}
////////////////////

var load_boxes = function (frame)
{
  init_box ("ctr" + frame + "z"); init_box ("fmt" + frame);
  init_box ("stk" + frame); init_box ("src" + frame); init_box ("win" + frame);
}
////////////////////

var resize_all = function()
{
  resize_frame ("info", 5);
}
////////////////////

var resize_frame = function (name, frame)
{
  var win = document.getElementById (name).nextElementSibling;
  var sib = win.firstElementChild.firstElementChild.children;
  var a = sib [0].clientWidth, b = sib [2].clientWidth;

  sib [2].style.width = (a < 300 && b < 40) ? "0" : "35vw";
  a += b; sib = sib [2]; b = sib.children.length;

  if (a > 400)
  {
    if (!b) for (b = 1; b <= 9; b++)
    {
      if (!(win = document.getElementById ("stk" + frame + "-" + b))) break;
      sib.appendChild (win.cloneNode (true)); win.style.visibility = "hidden";
      sib.appendChild (document.createElement ("P"));
    }
    sib.style.minWidth = "100px";
  }
  else
  {
    sib.innerHTML = ""; sib.style.minWidth = 0;

    for (b /= 2; b > 0; b--)
      document.getElementById ("stk" + frame + "-" + b).style.visibility = "visible";
  }
}
////////////////////

var init_box = function (name)
{
  var win = document.getElementById (name), list = win.children;
  var panel = win.parentNode.firstElementChild.nodeName == "DIV";
  win.onclick = function(event) { listpick (event.target, panel); }

  var m = 0, val = "", txt = list[0].innerText;

  for (var n = 0; n < list.length; n++) if (list[n].hasAttribute ("checked")) m = n;

  val = list[m].value; txt = list[m].innerText; list[m].classList.add ("mark");

  win.value = val; if (panel) return;

  var doc = win.parentNode.firstElementChild; doc.value = txt;
  doc.nextElementSibling.addEventListener ("click", function(){ listbox (this); });
}
////////////////////

var listbox = function (item)
{
  var box = item.nextElementSibling, doc = box.classList; doc.toggle ("show");
  if (dropdown && box != dropdown) dropdown.classList.remove ("show");
  event_time = 0; dropdown = doc.contains ("show") ? box : null;

  var w = item.clientWidth + item.parentNode.firstElementChild.clientWidth + 4;
  box.style.minWidth = w + "px";
}
////////////////////

var listpick = function (item, panel)
{
  var list = item.parentNode.children; if (item.nodeName == "DIV") return;

  for (var n = 0; n < list.length; n++) if (list[n].classList.contains ("mark"))
  {
    list[n].classList.remove ("mark"); break;
  }

  item.classList.add ("mark"); item.parentNode.value = item.value;
  if (!panel) item.parentNode.parentNode.firstElementChild.value = item.innerText;
}
////////////////////

var MEOW = function (event)
{
  if (event.type != "click" && event.type != "keydown") return;

  if (dropdown && event_time > 0 && event_time != event.timeStamp)
  {
    dropdown.classList.remove ("show"); dropdown = null;
  }
  event_time = event.timeStamp;
} 
////////////////////

var copylist = function (frame, num)
{
  var name, list, box, item, val, txt, i, j;

  var iptv = num < 0; if (iptv) num = -num; if (!num) return;

  if (num < 10)
  {
    name = "video";
    if (num == 1) list = list_1; else
    if (num == 2) list = list_2; else
    if (num == 3) list = list_3; else
    if (num == 4) list = list_4; else
    if (num == 5) list = list_5; else
    if (num == 6) list = list_6; else
    if (num == 7) list = list_7; else
    if (num == 8) list = list_8; else
    if (num == 9) list = list_9; else return;
  }
  else return;

  box = document.getElementById ("stk" + frame); item = box.children;

  for (i = item.length - 1; i > 0; i--) box.removeChild (item [i]);

  for (i = 0, j = 1; i < list.length; i += 2, j++)
  {
    txt = list [i+1];
    if (!(val = list [i])) val = txt; 
    if (val [0] != "?") if (iptv) val = "?" + val;
    if (val [val.length - 1] == ":") val = val + txt;
    box.appendChild (new Option ("[" + (j < 10 ? "0" : "") + j + "] " + txt, val));
  }

  list = document.getElementById ("stk" + frame + "-" + num).innerText;
  name = "Select a " + name + " (" + list + ")";

  item[0].innerText = box.parentNode.firstElementChild.value = name;
  box.value = 0; popper (frame, 0);
}
////////////////////

var select_site = function (frame, value)
{
  var doc = document.getElementById ("src" + frame);
  var box = doc.parentNode.firstElementChild;
  doc.value = value; doc = doc.children;

  for (var d, n = 0; n < doc.length; n++)
    if ((d = doc [n]).value == value)
    {
      box.value = d.innerText; d.classList.add ("mark");
    }
    else if (d.classList.contains ("mark")) d.classList.remove ("mark");
}
////////////////////

var hidelist = function (frame)
{
  var doc = document.getElementById ("stk" + frame);
  var box = doc.children[0]; doc.value = box.value;
  doc.parentNode.firstElementChild.value = box.innerText;
}
////////////////////

var toggle_hls = function (frame, state)
{
  if (state < 0) return;

  var doc = document.getElementById ("hls" + frame);
  var hls = doc.checked; if (hls == undefined) hls = 0;

  var txt = "Wrapper"; if (++hls > 2) hls = 0; if (state > 0) hls = state - 1;
  if (hls == 1) txt = "M3U8"; else if (hls == 2) txt = "DASH";

  doc.checked = hls; doc.innerHTML = txt;

  if (!state) document.getElementById ("mov" + frame + "b").checked = true;
}
////////////////////

var buttonpress = function (frame, num)
{
  var id1, id2, doc1, doc2, chk, txt;

  id1 = "btn" + frame + "a"; id2 = "btn" + frame + "b";

  doc1 = document.getElementById (num ? id2 : id1);
  doc2 = document.getElementById (num ? id1 : id2);

  chk = doc1.checked; doc1.checked = !chk;
  doc1.className = (chk ? "is_off" : "is_on");
  doc2.checked = false; doc2.className = "is_off";
}
////////////////////

var brightness = function (frame, mode)
{
  var LVL = document.getElementById ("ctr" + frame + "x");
  var SAT = document.getElementById ("ctr" + frame + "y");
  var win = document.getElementById ("mov" + frame);
  var vid = win.contentDocument;

  var lvl = LVL.value.substr (5) * 1;
  var sat = SAT.value.substr (5) * 1;
  var con, lo = -9, hi = 9;

  if (mode == 1) if ((lvl -= 1) < lo) lvl = lo;
  if (mode == 2) if ((lvl += 1) > hi) lvl = hi;
  if (mode == 3) if ((sat -= 1) < lo) sat = lo;
  if (mode == 4) if ((sat += 1) > hi) sat = hi;
  if (mode == 5)
  {
    var x = LVL.step, y = SAT.step, z = lvl || sat;
    if (z) { LVL.step = lvl; lvl = 0; } else lvl = x ? x : 0;
    if (z) { SAT.step = sat; sat = 0; } else sat = y ? y : 0;
  }

  LVL.value = "Brt:  " + (lvl > 0 ? "+" : "") + lvl;
  SAT.value = "Sat:  " + (sat > 0 ? "+" : "") + sat;

  lvl = lvl * 0.05 + 1; sat = sat * 0.1 + 1;
  sat = sat * (3 - lvl) / 2; con = (2 - lvl * (3 - lvl)) * (2.5 - sat) + 1;

  lvl = lvl.toFixed (3); con = con.toFixed (3); sat = sat.toFixed (3);
  lvl = "brightness(" + lvl + ") contrast(" + con + ") saturate(" + sat + ")";
  if (!vid || !(vid = vid.getElementById ("video"))) vid = win;
  vid.style.filter = win.value = lvl;
}
////////////////////

var urlcopy = function (frame)
{
  if (!document.getElementById ("mov" + frame + "m").checked)
  {
    document.getElementById ("line" + frame).select();
    document.execCommand ("copy"); return;
  }
  popper (frame, 2);
}
////////////////////

var input_onclick = function (id)
{
  var doc = document.getElementById (id);
  if (!doc.checked && doc.selectionStart >= doc.selectionEnd - 1) doc.select();
  doc.checked = true;
}
////////////////////

var input_onblur = function (id)
{
  document.getElementById (id).checked = false;
}
////////////////////

var is_busy = function (frame)
{
  if (busy) return 1;
  document.getElementById ("vid" + frame).innerHTML = "Busy";
  busy = 1; error = ""; return 0;
}
////////////////////

var no_fail = function (frame)
{
  if (busy) toggle_hls (frame, busy); else
  {
    document.getElementById ("vid" + frame).innerHTML = "Error";
    if (error != "") document.getElementById ("id" + frame).value = "err: " + error;
    no_format (frame);
  }
  var Busy = busy; busy = 0; return (Busy);
}
////////////////////

var stream_all = function (frame, type)
{
  if (busy) busy = type + 1;
  if (type < 2) return (!document.getElementById ("mov" + frame + "f").checked);
  return 1;
}
////////////////////

var reset_frame = function (frame)
{
  clear_video (frame); ir_action (-1); busy = 0;
}
////////////////////

var clear_video = function (frame)
{
  loadwindow ("", frame, ""); popper (frame, 3);
  brightness (frame, 0); vid_info (frame, 0, 0, 1);
  document.getElementById ("meta" + frame).step = 0;
}
////////////////////

var setup_cors = function (frame)
{
  if (document.getElementById ("mov" + frame + "p").checked)
    cors_bypass = document.getElementById ("proxy").value; else cors_bypass = "";

  if (cors_bypass.substr (0, 6) != "LOCAL:") cors_kraker = ""; else
    cors_kraker = cors_bypass = "http" + cors_bypass.substr (5);

  return true;
}
////////////////////

var get_time = function ()
{
  the_time = Date.now() / 500; return (the_time);
}

////////////////////////////////
///// INFO + ENTERTAINMENT /////
////////////////////////////////

var loadid = function (frame, mode)
{
  var url, fmt, doc, sub, src;

  if (busy) return; clear_video (frame); if (!setup_cors (frame)) return;

  doc = document.getElementById ("fmt" + frame);
  if (!(fmt = doc.value)) fmt = doc.children[0].value;

  if (mode == 0)
  {
    url = document.getElementById ("stk" + frame).value;
    if (!url) url = document.getElementById ("id" + frame).value;
  }
  else if (mode == 1)
  {
    url = document.getElementById ("line" + frame).value;
    url = url.replace (/\\u002F/g, "/"); url = url.replace (/\\/g, "");
  }
  else url = error;

  if (url.substr (0,1) == "?") { open_livestream (url, frame, fmt); return; }
  if (mode == 1) { loadwindow (url, frame, ""); return; }

  src = document.getElementById ("src" + frame).value;
  if (!src) src = 0; sub = url.split (": ");

  if (sub.length > 1) url = sub [sub.length - 1]; else
  {
    sub = url.split (":"); doc = sub [0];
    if (sub.length > 1 && doc.length < 4)
    {
      src = 0; url = sub [sub.length - 1];
      if (doc == "b") src = 1;
      if (doc == "v") src = 2;
      select_site (frame, src);
    }
  }      
  if (url == "") return;

  if (src == 1  && (url = getid (url,-12))) req_bitchute (url, frame, fmt); else
  if (src == 2  && (url = getid (url, -9))) req_vimeo (url, frame, fmt); else

  if (src == 0  && (url = getid (url, 11))) request (url, frame, fmt); else

  document.getElementById ("id" + frame).value = (url ? "Not supported" : "Invalid ID");
}
////////////////////

var getid = function (url, len)
{
  if (!len) return (url);

  tst = url.substr (url.length - 5, 5);
  var n = tst.search ("\\."); if (n < 0) n = tst.search ("/");
  if (n >= 0) url = url.substr (0, url.length + n - 5);

  if ((tst = url.search ("\\*")) >= 0) return (url.substr (tst+1));
  if (!len) return (url);

  if (len < 0)
  {
    len = -len;
    if (url.length < len - 2) return "";
    if (url.length == len - 2) return url;
    if (url.length == len - 1) return url;
    if (url.length == len) return url;

    url = url.substr (url.length - len, len);
    if ((len = url.search ("/")) > 1) url = "";
    if (len < 0 && (len = url.search ("=")) > 1) url = "";
    if (len < 0 && (len = url.search ("-")) > 1) url = "";

    if (len >= 0) url = url.substr (len + 1);
    return url;
  }

  if (url.length < len) return "";
  if (url.length == len) return url;

  url = url.substr (url.length - len, len);
  if (url.search ("/") >= 0) url = "";
  if (url.search ("=") >= 0) url = "";
  return url;
}
////////////////////

var request = function (id, frame, fmt)
{
  if (document.getElementById ("mov" + frame + "c").checked)
  {
    var url = "https://www.youtube.com/embed/" + id;
    if (!busy) loadwindow (url, frame, "youtube: " + id);
    return;
  }

  var src = document.getElementById ("ctr" + frame + "z").value;

  if (src == 10) if (fmt < 0) src = 0; else { request_youtube (id, frame, -fmt); return; }
  if (src == 11) if (fmt < 0) src = 0; else { request_youtube (id, frame, fmt); return; }

  if (!src && cors_kraker) { request_youtube (id, frame, fmt); return; }

  invidious_url = invidious_site [src]; request_invidious (id, frame, (fmt < 0 ? -fmt : fmt));
}
////////////////////

const request_invidious = async (id, frame, fmt) =>
{
  var i, j, n, f = [0,0,0,0,0,0,0,0];

  var tag = "invidious"; if (is_busy (frame)) return;
  document.getElementById ("id" + frame).value = tag + " (ID)";
  var url = invidious_url + "/api/v1/videos/" + id + "?fields=formatStreams,hlsUrl";

try
{
  response = await fetch (cors_kraker + url);
  jsonData = await response.json();

  var sub = jsonData.formatStreams; if (!sub) throw ("!!!"); n = sub.length;

  for (i = 0; i < n; i++)
  {
    if ((j = argformat (sub[i].itag)) >= 0) f[j] = i + 1;
  }
    
  if ((n = getformat (f, fmt)))
  {
    fmt = n; fixformat (f, frame); n = f[argformat(n)] - 1;
    url = (sub[n].url.search ("&gcr=") > 0) ? "local=true&" : "";  // geo-restricted?
    url = invidious_url + "/latest_version?" + url + "itag=" + fmt + "&id=" + id;
  }
  else   // live stream
  {
    url = jsonData.hlsUrl; if (!url) throw ("!!!");
    if (url.substr (0,1) == "/") url = invidious_url + url;
    sub = url = url + "?local=true";

    if (stream_all (frame, 1)) fmt = 0; else
    {
      response = await fetch (url);
      textData = await response.text();

      url = crack_m3u8 (url, textData, frame, fmt); if (url == "") throw ("!!!");
      n = url.search ("<>"); fmt = url.substr (n + 2); url = url.substr (0, n);
    }
  }

} catch (err) { console.log (err); busy = 0; }

  error = id; if (!fmt) no_format (frame);
  if (no_fail (frame)) loadwindow (url, frame, tag + " [" + fmt + "]: " + id);
}
////////////////////

const request_youtube = async (id, frame, fmt) =>
{
  var i, j, n, s, sub, dat, key, sig;
  var f = [0,0,0,0,0,0,0,0,0,0], d = [0,0,0,0,0,0,0,0,0,0];

  var tag = "youtube"; if (is_busy (frame)) return;
  document.getElementById ("id" + frame).value = tag + " (ID)";
  var url = cors_bypass + "https://www.youtube.com/get_video_info?video_id=" + id + "&el=";

try
{
  response = await fetch (url + "leanback");
  textData = await response.text();

  s = "%22itag%22"; sub = textData.split (s);

  if (sub.length < 2)
  {
    response = await fetch (url + "previewpage");
    textData = await response.text();

    sub = textData.split (s); if (sub.length < 2) throw ("!!!");
  }

  for (i = 1; i < sub.length; i++)
  {
    url = sub [i]; if (url.search ("%3A") != 0) continue;
    s = url.substr (3, url.search ("%2C") - 3);
    if ((j = argformat (s)) >= 0) f[j] = i;
    if ((j = isdashfmt (s)) >= 0)
      if (url.search ("index") > 0 || url.search ("_live_") > 0) d[j] = i;
  }

  if (fmt < 0)
  {
    if (!d[8]) d[0] = d[1] = d[2] = 0;
    if (!d[9]) d[4] = d[5] = d[6] = 0;
    fmt = -fmt; n = getformat (d, fmt);
    if (cors_kraker) if (n) { f = d; tag = ""; }
  }

  fmt = getformat (f, fmt); fixformat (f, frame);
  if ((n = argformat (fmt)) < 0 || !(n = f[n])) throw ("!!!");

  s = yt_split (sub[n]); dat = s.split ("|"); url = dat[0]; sig = dat[1];

  if (sig.length > 99)  // some videos require a signature; usually 105 or 109 bytes long
  {
    response = await fetch (cors_bypass + "https://www.youtube.com/embed/" + id);
    textData = await response.text();

    url = textData.substr (textData.search ("base\\.js") - 100, 107);
    url = url.substr (url.search ('src=') + 5);

    if (!(key = cookies [url]))
    {
      response = await fetch (cors_kraker + "https://www.youtube.com" + url);
      textData = await response.text();

      key = yt_algo (textData); cookies [url] = key;
    }
    eval (key); url = dat[0] + "&sig=" + sig;
  }

  if (!tag)
  {
    if ((i = argformat (fmt)) < 4) j = 8; else j = 9;
    s = yt_split (sub [f[j]]) + "|" + dat[2];
    var dat = s.split ("|"); j = j & 1;

    sig = dat[1];
    if (sig) { eval (key); sig = "&sig=" + sig; }
    sig = dat[0] + sig;

    download_doc = head + "YouTube DASH download links (" + id + ") -- " +
      "<a href='" + sig + "'>Audio</a> &nbsp;" +
      "<a href='" + url + "'>Video</a>" + tail;

    s = url.substr (url.search ("&dur=") + 5); s = s.substr (0, s.search ("&")) * 1;
    var v = dat[2] + "," + dat[3]; var w = "wanna_boot_dash";

    if (!s)
    {
      v = "x-head-seqnum"; w = "x-head-time-sec";
      s = "~range=bytes=0-499|" + v + "|" + w + "|*";

      response = await fetch (cors_kraker + s + url, { method: 'GET' } );
      v = response.headers.get (v); if (!v) throw ("!!!");
      w = response.headers.get (w); if (!w) throw ("!!!");

      var seg_num = v * 1; var seg_ofs = w * 1;
      var seg_dur = Math.round (10 * seg_ofs / seg_num) / 10;
      n = Math.ceil (90 / seg_dur); // initial 90-second progress bar; can be up to 3 hours

      seg_num -= n; seg_ofs -= Math.round (n * 10 * seg_dur) / 10;
      if (seg_num < 1 || seg_ofs < 1) seg_num = seg_ofs = 0;

      v = seg_num + "," + seg_ofs + "," + seg_dur + ",";
      w = "wanna_boot_dash_live"; s = "";
    }

    tag = fmt + "(" + id + ").mpd";

    s = s + "|" + (j ? "audio/webm" : "audio/mp4") + "|" + (j ? "opus" : "mp4a.40.2");
    s = s + "|" + (j ? "video/webm" : "video/mp4") + "|" + (j ? "vp9" : "avc1.4d401e");
    s = s + "|" + v + "|" + tag + "|" + sig + "|" + url + "|";

    await fetch (cors_kraker + w, { method: 'POST', body: s } );
    url = cors_kraker + "_" + w + "_" + tag;
    tag = "yt-dash"; stream_all (frame, 2);
  }

} catch (err) { console.log (err); busy = 0; }

  error = id; if (no_fail (frame)) loadwindow (url, frame, tag + " [" + fmt + "]: " + id);
}
////////////////////

var yt_split = function (t)
{
  var n, p, q, s;

  n = t.search ("%7D%5D");
  s = t.substr (0, (n < 0 ? t.length : n));
  s = s.replace (/%5Cu0026/g, "&");
  s = s.replace (/%25/g, "%");
  s = s.replace (/%25/g, "%");
  s = decodeURIComponent (s);

  n = s.search ("&s="); if (n < 0) n = s.search ('"s=');

  if (n < 0) p = ""; else
  {
    p = s.substr (n + 3, 300);
    n = p.search ("&"); if (n > 0) p = p.substr (0, n);
    n = p.search ('"'); if (n > 0) p = p.substr (0, n);
  }

  q = s.replace (/\\/g, "");
  n = q.search ("\\]");  if (n > 0) q = q.substr (0, n);
  q = q.split ('"start":"');

  if (q.length < 3) q = ""; else
  {
    q[1] = q[1].substr (0, q[1].search ('"\\}'));
    q[2] = q[2].substr (0, q[2].search ('"\\}'));
    q[1] = q[1].replace ('","end":"', "-");
    q[2] = q[2].replace ('","end":"', "-");
    q = q[1] + "," + q[2];
  }

  s = s.substr (s.search ("http")); s = s.substr (0, s.search ('"'));
  n = s.search ("&sp="); if (n > 0) s = s.substr (0, n);
  n = s.search ("&s=");  if (n > 0) s = s.substr (0, n);

  return (s + "|" + p + "|" + q);
}

var yt_algo = function (data)
{
  var i, j, n, s, v;

  for (i = 0; i < 3; i++)
  {
    j = data.search ('a=a\\.split\\(""\\)'); if (j < 0) return "";
    s = data.substr (j + 14, 300); if ((n = s.search ("a\\.join")) > 0) break;
    if (i > 1) return ""; data = data.substr (j + 1);
  }
  s = s.substr (0, n - 7);
  v = "var " + s.substr (0, 2) + "=\\{";
  if ((n = data.search (v)) < 0) return "";

  v = data.substr (n, 300); v = v.substr (0, v.search ("\\};") + 2);
  return (v + "var a=sig.split('');" + s + "sig=a.join('');");
}
////////////////////

const req_bitchute = async (id, frame, fmt) =>
{
  var tag = "bitchute"; if (is_busy (frame)) return;
  document.getElementById ("id" + frame).value = tag + " (ID)";
  var url = "https://www.bitchute.com/embed/" + id + "/";

try
{
  response = await fetch (cors_bypass + url);
  textData = await response.text();

  var s = '<source src="';
  var n = textData.search (s); if (n < 0) throw ("!!!");
  
  url = textData.substr (n + s.length, 100);
  url = url.substr (0, url.search ('"'));

  if (!url) throw ("!!!"); url = "~" + url;

} catch (err) { console.log (err); busy = 0; }

  error = id; no_format (frame); if (no_fail (frame)) loadwindow (url, frame, tag + ": " + id);
}
////////////////////

const req_vimeo = async (id, frame, fmt) =>
{
  var i, j, k, f = [0,0,0,0,0,0,0,0], r = [0,0,0,0];

  var tag = "vimeo"; if (is_busy (frame)) return;
  document.getElementById ("id" + frame).value = tag + " (ID)";
  var url = "https://player.vimeo.com/video/" + id + "/config";

try
{
  response = await fetch (cors_bypass + url);
  jsonData = await response.json();

  if (jsonData.request == undefined)   // privacy lock, go long way around
  {
    response = await fetch (cors_bypass + "https://vimeo.com/" + id);
    textData = await response.text();

    var s = '"config_url":"';
    var n = textData.search (s); if (n < 0) throw ("!!!");

    url = textData.substr (n + s.length, 500);
    url = url.substr (0, url.search ('"'));
    url = url.replace (/\\/g, "");

    response = await fetch (cors_bypass + url);
    jsonData = await response.json();
  }

  if (!(url = jsonData.request.files.progressive))  // https://vimeo.com/378870053 live stream
  {
    if (!(url = jsonData.request.files.hls)) throw ("!!!");
    if (!(url = jsonData.request.files.hls.cdns)) throw ("!!!");
    if (!(s = url.fastly_live)) s = url.akamai_live; url = s.url;
    if (cors_kraker) url = cors_kraker + "~" + url;

    if (stream_all (frame, 1)) fmt = 0; else
    {
      response = await fetch (url);
      textData = await response.text();
      url = response.url;

      url = crack_m3u8 (url, textData, frame, fmt); if (url == "") throw ("!!!");
      n = url.search ("<>"); fmt = url.substr (n + 2); url = url.substr (0, n);
    }
  }
  else
  {
    for (i = 0; i < url.length; i++)
    {
      k = url[i].quality; k = k.substr (0, k.search ("p"));
      if ((j = chkformat (k)) >= 0) if (r[j] < k) { f[j] = i + 1; r[j] = k; }
    }
    fmt = getformat (f, fmt); fixformat (f, frame);
    if ((j = argformat (fmt)) < 0 || (j = f[j] - 1) < 0) throw ("!!!");
    fmt = url[j].height; if ((url = url[j].url) == undefined) throw ("!!!");
  }

} catch (err) { console.log (err); busy = 0; }

  error = id; if (no_fail (frame)) loadwindow (url, frame, tag + " [" + fmt + "]: " + id);
}
////////////////////

///////////////////
///// DIG DUG /////
///////////////////

var digid = function (frame)
{
  var doc, src, fmt;

  if (busy) return; clear_video (frame); if (!setup_cors (frame)) return;

  doc = document.getElementById ("fmt" + frame);
  if (!(fmt = doc.value)) fmt = doc.children[0].value;

  src = document.getElementById ("src" + frame).value;
  doc = document.getElementById ("line" + frame).value;

  document.getElementById ("id" + frame).value = "Not supported";
}
////////////////////

var chkformat = function (q)
{
  if (q > 100 && q <= 432) return 0;
  if (q > 432 && q <= 580) return 1;
  if (q > 580 && q <= 800) return 2;

  return -1;
}
////////////////////

var pixformat = function (q)
{
  if (q == 0 || q == 4) return 360;
  if (q == 1 || q == 5) return 480;
  if (q == 2 || q == 6) return 720;

  return -1;
}
////////////////////

var isdashfmt = function (fmt)
{
  if (fmt == 134) return 0;
  if (fmt == 135) return 1;
  if (fmt == 136) return 2;
  if (fmt == 140) return 8;
  if (fmt == 243) return 4;
  if (fmt == 244) return 5;
  if (fmt == 247) return 6;
  if (fmt == 251) return 9;

  return -1;
}

var argformat = function (fmt)
{
  if (fmt == 18) return 0;
  if (fmt == 19) return 1;
  if (fmt == 22) return 2;
  if (fmt == 37) return 3;
  if (fmt == 43) return 4;
  if (fmt == 44) return 5;
  if (fmt == 45) return 6;
  if (fmt == 46) return 7;

  return -1;
}

var getformat = function (f, fmt)
{
  if (f[0] <= 0 && f[1] <= 0 && f[2] <= 0 && f[3] <= 0)
  {
    if (fmt == 18) fmt = 43;
    if (fmt == 19) fmt = 44;
    if (fmt == 22) fmt = 45;
    if (fmt == 37) fmt = 46;
  }

  if (f[4] <= 0 && f[5] <= 0 && f[6] <= 0 && f[7] <= 0)
  {
    if (fmt == 43) fmt = 18;
    if (fmt == 44) fmt = 19;
    if (fmt == 45) fmt = 22;
    if (fmt == 46) fmt = 37;
  }

  var m = 0, n = fmt;

  if (n == 37) if (f[3]) m = n; else n = 22;
  if (n == 22) if (f[2]) m = n; else n = 19;
  if (n == 19) if (f[1]) m = n; else n = 18;
  if (n == 18) if (f[0]) m = n;

  n = fmt; if (m) return m;

  if (n == 18) if (f[0]) m = n; else n = 19;
  if (n == 19) if (f[1]) m = n; else n = 22;
  if (n == 22) if (f[2]) m = n; else n = 37;
  if (n == 37) if (f[3]) m = n;

  n = fmt; if (m) return m;

  if (n == 46) if (f[7]) m = n; else n = 45;
  if (n == 45) if (f[6]) m = n; else n = 44;
  if (n == 44) if (f[5]) m = n; else n = 43;
  if (n == 43) if (f[4]) m = n;

  n = fmt; if (m) return m;

  if (n == 43) if (f[4]) m = n; else n = 44;
  if (n == 44) if (f[5]) m = n; else n = 45;
  if (n == 45) if (f[6]) m = n; else n = 46;
  if (n == 46) if (f[7]) m = n;

  return m;
}
////////////////////

var fixlist = function (item, doc, state)
{
  var txt = doc.children[item].text.slice (0,-1);
  if (state < 0) txt = txt + '*'; else if (state > 0) txt = txt + '+'; else txt = txt + '-';
  doc.children[item].text = txt;
}
////////////////////

var fixformat = function (f, frame)
{
  var doc = document.getElementById ("fmt" + frame);

  fixlist (0, doc, f[0]); fixlist (1, doc, f[1]); fixlist (2, doc, f[2]);
  fixlist (3, doc, f[4]); fixlist (4, doc, f[5]); fixlist (5, doc, f[6]);

/*
  fixlist (0, doc, f[0]); fixlist (1, doc, f[1]);
  fixlist (2, doc, f[2]); fixlist (3, doc, f[3]);
  fixlist (4, doc, f[4]); fixlist (5, doc, f[5]);
  fixlist (6, doc, f[6]); fixlist (7, doc, f[7]);
*/
}
////////////////////

var no_format = function (frame)
{
  var doc = document.getElementById ("fmt" + frame);

  fixlist (0, doc, -1); fixlist (1, doc, -1);
  fixlist (2, doc, -1); fixlist (3, doc, -1);
  fixlist (4, doc, -1); fixlist (5, doc, -1);
}
////////////////////

//////////////////////////////
///// INTERNET TV (IPTV) /////
//////////////////////////////

var open_livestream = function (url, frame, fmt)
{
  var n, z = frame, f = [0,0,0,0,0,0,0,0]; if (busy) return;

  if (url.substr (0,1) == "?") url = url.substr (1);
  if (url.substr (0,1) == "<") { open_dloader (url, frame, fmt); return; }

  if (url [0] == "/")
  {
    var s = url.split (" "); var t = (s[0] + "/////").split ("/");
    f[0] = t[1] * 1; f[1] = t[2] * 1; f[2] = t[3] * 1;
    f[4] = t[4] * 1; f[5] = t[5] * 1; f[6] = t[6] * 1;
    fmt = getformat (f, fmt); if ((n = argformat (fmt)) < 0) return;
    n = f[n]; if (n != Math.trunc (n)) n = (n * 10) % 10;
    url = s[n]; if (n <= 0 || !url) return;
  }

  n = url.search (":"); if (n > 3) return;
  var src = url.substr (0, n); url = url.substr (n+1);

  if (src == "0") { request (url, frame, -fmt); return; }

  document.getElementById ("id" + frame).value = "Tuning...";

  if (src == "7") open_tv0 (z, 0, f, fmt, url);
  if (src == "8") open_tv0 (z, 1, f, fmt, url);
  if (src == "9") open_tv0 (z, 1, f, fmt, cors_bypass + url);
}
////////////////////

const open_dloader = async (url, frame, fmt) =>
{
  if (is_busy (frame)) return; else try
  {
    var n = document.getElementById ("hls" + frame).checked;
    if (n != 1 || (n = url.search (">")) < 2) throw ("???");
    var name = url.substr (1, n - 1); url = url.substr (n + 1);
    var resp = await fetch (url);
    var data = await resp.text();
  } catch (err) { console.log (err); busy = 0; }

  error = ""; busy = -busy; if (!no_fail (frame)) return;
  document.getElementById ("vid" + frame).innerHTML = "Download";
  dloading = name; crack_m3u8 (url, data, frame, fmt); dloading = ""; 
}

const open_tv0 = async (frame, mode, f, fmt, url) =>
{
  var n; if (is_busy (frame)) return;

  if (url.substr (0,1) == "*") if (cors_kraker) url = cors_kraker + "~" + url; else
  {
    url = url.substr (1); n = url.search ("\\*"); if (n >= 0) url = url.substr (n + 1);
  }

  if (stream_all (frame, 1)) fmt = mode = 0; else
  {
    var x = 0; n = getformat (f, fmt);
    if ((n = argformat (n)) >= 0)
    {
      x = pixformat (n); n = f[n]; var y = Math.trunc (n); if (n != y) x = y;
    }
    if (mode) mode = (x ? x : 2); else { fmt = x; mode = 1; }
  }

  if (mode > 1) try
  {
    response = await fetch (url);
    textData = await response.text();

    var sub = crack_m3u8 (url, textData, frame, fmt); if (sub == "") throw ("!!!");
    n = sub.search ("<>"); fmt = sub.substr (n + 2); url = sub.substr (0, n);

    fmt = fmt * 1; if (fmt && mode > 2) fmt = mode; else mode = 0;

  } catch (err) { console.log (err); busy = 0; }

  if (mode) fixformat (f, frame); else if (!fmt) no_format (frame);
  fmt = " [" + fmt + "]"; if (no_fail (frame)) loadwindow (url, frame, "Internet TV" + fmt);
}
////////////////////

var saved_path = function (name)
{
  var n, time, path;

  if (!(path = freetv [name])) path = ""; else
  {
    n = path.search (" "); time = path.substr (0, n) * 1;
    path = path.substr (n + 1); if (time < the_time - 15000) path = "";
  }
  return (path);
}
////////////////////

var allow_cookie = function (source, cookie)
{
  if (!cors_kraker) return ({});

  if (source) if (cookie) cookies [source] = cookie; else cookie = cookies [source];

  if (!cookie) cookie = "null"; return ({ headers: { 'Accept': '**' + cookie } });
}
////////////////////

//////////////////////////
///// INTERNET RADIO /////
//////////////////////////

var radio = function (url)
{
  document.getElementById ("ir_url").value = url;
  ir_action (0); if (url) ir_action (2);
}
////////////////////

var ir_action = function (mode)
{
  var win = document.getElementById ("internet_radio");
  var pop = document.getElementById ("ir_popup");
  var sts = document.getElementById ("ir_status");
  var vol = document.getElementById ("ir_volume");
  var url = document.getElementById ("ir_url").value;

  var src_ok = (win.src && win.src != "file:///");
  var volume = vol.value * 1;

  if (mode == 3)
  {
    sts = pop.checked; pop.checked = !sts;
    pop.className = (sts ? "is_off" : "is_on");
    return;
  }

  if (mode == 2 && url.length == 11 && url.search (":") < 0)
  {
    var src = document.getElementById ("ctr5z").value; if (src > 9) src = 0;
    url = invidious_site [src] + "/latest_version?local=true&itag=251&id=" + url;
    document.getElementById ("ir_url").value = url;
  }

  if (mode == 2 && pop.checked && url)
    { loadwindow (url, -volume, "Internet Radio"); return; }

  if (mode == 2 && !src_ok) if (url)
  {
    if (last_time > get_time() - 2) mode = 0; else win.src = url; last_time = the_time;
  }
  else
  {
    url = document.getElementsByName ("ir");
    for (var i = 0; i < url.length; i++) if (url[i].checked) url[i].onclick();
    return;
  }

  if (mode == 0 || (mode == -2 && src_ok))
  { sts.value = (mode ? "ERROR" : "Stopped"); win.pause(); win.src = "file:///"; }

  if (mode == 2 || (mode == -1 && src_ok))
  { sts.value = "Playing"; win.play(); }

  if (mode == 1 && src_ok)
  { sts.value = "Paused"; win.pause(); }

  if (mode == 4 && volume > 0) volume -= volume > 40 ? 10 : 5;
  if (mode == 5 && volume < 100) volume += volume < 40 ? 5 : 10;

  win.muted = true; win.volume = volume / 100;
  win.muted = false; vol.value = volume;
}
////////////////////

var popper = function (frame, mode)
{
  var i, j, k, val = txt = "";
  var win = document.getElementById ("pop" + frame);
  var index = win.style.zIndex; if (!index) index = -1;
  var popup = document.getElementById ("mov" + frame + "m").checked;

  if (busy) return;

  if (mode.length != undefined)
  {
    txt = mode.substr (mode.search ("<>") + 2);
    val = mode.substr (0, mode.search ("<>"));
    txt = txt.substr (txt.search (" ") + 1);
    if (val == "") mode = 1;
  }

  if (mode && mode.length == undefined)
  {
    if (mode == 1) win.style.zIndex = -index;
    if (mode == 2) win.style.zIndex = popup ? -index : index;
    if (mode == 3) win.style.zIndex = -1;
    if (mode == 4) win.style.zIndex = popup ? 1 : -1;
    return;
  }

  var box = document.getElementById ("stk" + frame);
  var doc = win.getElementsByTagName ("table");

  if (doc.length < 2 || !(doc = doc [1])) doc = null;
  if (doc) doc = doc.getElementsByTagName ("button");
  if (!doc || doc.length < 2) doc = null;

  if (mode)
  {
    if (doc)
    {
      for (i = 0; i < doc.length - 1; i++) if (txt == doc[i].innerText) break;

      for (; i > 0; i--)
      {    
        doc[i].value = doc[i-1].value; doc[i].innerText = doc[i-1].innerText;
      }
      doc[0].value = mode; doc[0].innerText = txt;
    }
    error = val; box.value = "";
    box.parentNode.firstElementChild.value = "@ " + txt;
    if (frame == 5) loadid (frame, 2);
    //if (frame == 6) loadnews (frame, 2);
    //if (frame == 7) loadmovie (frame, 2);
    return;
  }

  var start = '<button onclick="javascript:popper(' + frame + ',this.value)" value="';
  var middle2 = '" style="background-color:lightblue">';
  var middle1 = '" style="background-color:pink">';
  var pop = "<table><tr><td>"; box = box.children;

  var n = Math.floor (((i = box.length) + 2) / 3);
  if ((i -= 45) > 0) n = 15; else i = 1;

  for (j = k = 0; k < 3; i++)
  {
    if (i >= box.length) { val = ""; txt = "-"; } else
      { val = box[i].value; txt = box[i].innerText; }
    pop = pop + start + val + "<>" + txt + middle1 + txt + "</button><br>";
    if (++j >= n) { j = 0; if (++k < 3) pop = pop + "</td><td>"; }
  }
  pop = pop + "</td></tr></table><table><tr><td>";

  for (i = 0, j = k = 0; k < 3; i++)
  {
    if (!doc || i >= doc.length) { val = ""; txt = "-"; } else
      { val = doc[i].value; txt = doc[i].innerText; }
    pop = pop + start + val + middle2 + txt + "</button><br>";
    if (++j >= 4) { j = 0; if (++k < 3) pop = pop + "</td><td>"; }
  }
  win.innerHTML = pop + "</td></tr></table>";
//  if (popup) win.style.zIndex = 1;
  win.style.zIndex = 1;
}
////////////////////

//////////////////////
///// LOADWINDOW /////
//////////////////////

var loadwindow = function (url, frame, site)
{
  var h, w, win, raw, title, insert, specs, mode;

  var bstyle = "<body style='margin:0;padding:0;background-color:";
  var istyle = " style='position:absolute;border:none;outline:none;width:100%;height:100%'";
  var vstyle = " autoplay allowfullscreen ";

  var frm = document.getElementById ("mov" + frame);
  var msg = document.getElementById ("vid" + frame);
  get_time();

  if (url == "")
  {  
    msg.innerHTML = "No Video"; win = frm.parentNode; win.removeChild (frm);
    frm.src = "about:blank"; frm.style.pointerEvents = "none"; win.appendChild (frm);
    if (site) document.getElementById ("id" + frame).value = site;
    return;
  }

  if (last_time > the_time - 2) return; last_time = the_time;

  if (frame <= 0)  // Internet Radio popup window
  {
    insert = "<!DOCTYPE html><html><head><title>" + site + "</title></head>" + bstyle;
    insert = insert + "cornflowerblue;color:turquoise;font-size:20px;line-height:22px;text-align:center'>";
    insert = insert + "<audio controls style='position:absolute;left:0;bottom:0;width:100%;height:25vh'";
    insert = insert + " id='audio'></audio><h1><i>" + site + "</i></h1></body></html>";
    specs = "width=440,height=120,top=100,left=100";

    win = window.open ("about:blank", "audiobox", specs); win.focus();
    var doc = win.document; doc.open(); doc.write (insert); doc.close();
    var aud = doc.getElementById ("audio"); aud.src = url;
    aud.volume = frame / -100; aud.play(); 

    doc.body.onfocus = function()
    {
      h = 120 - aud.clientHeight * 4; w = 440 - aud.clientWidth;
      win.resizeBy (w, h); doc.body.onfocus = function() {};
    }
    return;
  }

  var multi = document.getElementById ("mov" + frame + "m").checked;
  var nplay = document.getElementById ("mov" + frame + "n").checked;

  if (document.getElementById ("mov" + frame + "a").checked) raw = 0; else
  if (document.getElementById ("mov" + frame + "b").checked) raw = 1; else
  if (document.getElementById ("mov" + frame + "c").checked) raw = 2; else raw = 0;

  if (site == "") mode = 0; else
  {
    if (url [0] == "~") url = cors_kraker ? cors_kraker + url : url.substr (1);
    specs = url.substr (0,4); mode = document.getElementById ("meta" + frame).step * 1;

    if (specs != "http" && specs != "file")
    {
      msg.innerHTML = "Bad URL"; return;
    }
    document.getElementById ("id" + frame).value = site;
    document.getElementById ("line" + frame).value = url;

    if (nplay)
    {
      msg.innerHTML = "No Play"; return;
    }
  }

  if (raw == 1)
  {
    title = "Wrapper";
    insert = "'><video" + istyle + vstyle + "id='video'></video></body>";
  }

  if (raw == 2)
  {
    title = "Sandbox";
    insert = "'><iframe" + istyle + vstyle + "src='" + url +
      "' sandbox='allow-scripts allow-same-origin allow-forms'></iframe></body>";
  }

  ir_action (1); var filter = frm.value; if (!filter) filter = "initial";

  if (document.getElementById ("btn" + frame + "b").checked)
  {
    var lft, top;

    win = document.getElementById ("win" + frame);
    if (!(specs = win.value)) specs = win.children[0].value;

    h = specs.search (":");
    w = specs.substr (0, h);
    h = specs.substr (h + 1);

    lft = (window.screen.width - w)  / 2;
    top = (window.screen.height - h) / 3;

    specs = "width=" + w + ",height=" + h + ",top=" + top + ",left=" + lft;
  }

  else if (document.getElementById ("btn" + frame + "a").checked)
  {
    h = w = 0; specs = "";
  }

  else
  {
    if (raw != 1)
    {
      frm.style.filter = filter; frm.src = url;
    }
    else
    {
      frm.style.filter = "initial";
      win = frm.contentDocument; insert = bstyle + "black" + insert;
      load_stream (frame, true, insert, url, win, filter, mode);
    }
    frm.style.pointerEvents = "auto"; msg.innerHTML = "No Video"; return;
  }

  if (multi) vidwin = null; else if (h != last_h || w != last_w || raw != last_raw)
  {
    if (vidwin) vidwin.close(); vidwin = null;
  }
  if (!vidwin || vidwin.closed) vidwin = window.open ("about:blank", "_blank", specs);
  last_h = h; last_w = w; last_raw = raw;

  win = vidwin.document; if (win.body.onunload) win.body.onunload();

  if (raw == 0) vidwin.location = url; else
  {
    istyle = "<html><head><title>" + title + "</title></head>";
    insert = istyle + bstyle + "black" + insert + "</html>";
    load_stream (frame, false, insert, url, win, filter, mode);
  }
  vidwin.focus(); msg.innerHTML = "";
}
////////////////////

var vid_oops = function (frame, vid, fatal)
{
  if (fatal) setTimeout (function() { vid_error (vid); }, 500);
}
////////////////////

var vid_info = function (frame, w, h, reset)
{
  var msg = w + " x " + h;
  if (w <= 0 || h <= 0) if (reset) msg = ""; else return;
  doc = document.getElementById ("meta" + frame).value = msg;
}
////////////////////

var load_stream = function (frame, is_local, insert, url, doc, filter, mode)
{
  if (!doc) return; doc.open(); doc.write ("<!DOCTYPE html>" + insert); doc.close();

  var win = doc.getElementById ("video");
  var fmt = document.getElementById ("fmt" + frame).value;
  var hls = document.getElementById ("hls" + frame).checked;
  if (mode >= 0 && !document.getElementById ("mov" + frame + "f").checked) fmt = 0;

  if (!win)
  {
    win = doc.getElementsByTagName ("iframe")[0];
    if (win) win.style.filter = filter; return;
  }

  if (!is_local) frame = 0; else win.onloadedmetadata = function()
  {
    var w = this.videoWidth, h = this.videoHeight; vid_info (frame, w, h, 0);
    if (localhost && (w <= 0 || h <= 0)) this.poster = "~poster.jpg";
  }

  // Firefox and Opera: popup windows are incorrectly sized
  // create the controls when the window is ready (window will be resized)

  doc.body.onfocus = function()
  {
    doc.body.onfocus = function() {};
    create_controls (win, is_local ? null : vidwin, last_w, last_h);
  }

  win.step = mode; win.value = frame; win.style.filter = filter;
  if (is_local) doc.body.onfocus();  // embedded viewer is always ready

  if (!hls)
  {
    win.src = url; win.onerror = function() { vid_oops (frame, win, true); }
  }

  if (hls == 1)
  {
    var js = get_js ("HLS", !window.Hls);
    js.onload = function() { play_hls (frame, mode, url, doc, win, fmt); }
    if (window.Hls) js.onload(); else if (localhost) js.src = "~hls_player.js";
      else js.src = "https://cdn.jsdelivr.net/npm/hls.js@0.12.0/dist/hls.min.js";
  }

  if (hls == 2)
  {
    var js = get_js ("DASH", !window.dashjs);
    js.onload = function() { play_dash (frame, mode, url, doc, win, fmt); }
    if (window.dashjs) js.onload(); else if (localhost) js.src = "~dash_player.js";
      else js.src = "https://reference.dashif.org/dash.js/v2.9.3/dist/dash.all.min.js";
  }
}
////////////////////

var get_js = function (type, replace)
{
  var name = type + "_player", js = document.getElementById (name);
  if (js) if (!replace) return js; else js.parentNode.removeChild (js);
  js = document.createElement ("SCRIPT"); js.onerror = function() { err_play (type); }
  js.id = name; document.body.appendChild (js); return js;
}

var err_play = function (error)
{
  alert (error + " player seems to be missing! Server not serving.\n\n" +
    " (o o)  ((( Could be that THEY are watching you ! )))  (o o)\n \n");
}

var hls_select = function (levels, fmt)
{
  if (!fmt) return (-1); var f = formats_m3u8 (levels);
  fmt = getformat (f, fmt); fmt = argformat (fmt);
  if (fmt >= 0) fmt = f[fmt] - 1; return (fmt);
}

var play_hls = function (frame, mode, url, doc, win, fmt)
{
  var hls_cfg = {
    debug: false,
    startLevel: 2,
    autoStartLoad: false,
    capLevelOnFPSDrop: true,
    capLevelToPlayerSize: true,
    defaultAudioCodec: "mp4a.40.5",
    fpsDroppedMonitoringPeriod: 3000,
    fpsDroppedMonitoringThreshold: 0.1,
    minAutoBitrate: 350000,
    enableWebVTT: false,
    enableCEA708Captions: false
  };

  var vid = new Hls (hls_cfg);
  doc.body.onunload = function() { vid.destroy(); console.log ("HLS player unloaded."); }
  vid.loadSource (url);
  vid.attachMedia (win);
  vid.on (Hls.Events.ERROR, function (event,data) { vid_oops (frame, win, data.fatal); });

  vid.on (Hls.Events.MANIFEST_LOADED, function (event,data) {
    this.loadLevel = hls_select (this.levels, fmt); this.startLoad(); });

  if (frame > 0) vid.on (Hls.Events.BUFFER_CODECS, function (event,data) {
    var x = data.video; if (x) vid_info (frame, x.metadata.width, x.metadata.height, 0); });
}

var play_dash = function (frame, mode, url, doc, win, fmt)
{
  var vid = dashjs.MediaPlayer().create();
  doc.body.onunload = function() { vid.reset(); console.log ("DASH player unloaded."); }
  // vid.getDebug().setLogToBrowserConsole(false);   // turn off fracking console messages! v2.5.0
  vid.initialize (win, url, true);
  vid.on (dashjs.MediaPlayer.events ["ERROR"], function () { vid_oops (frame, win, true); });

  if (frame > 0) vid.on (dashjs.MediaPlayer.events ["QUALITY_CHANGE_RENDERED"], function ()
    { var x = vid.getCurrentTrackFor ('video'); if (!x) return;
      var y = x.bitrateList [vid.getQualityFor ('video')];
      vid_info (frame, y.width, y.height, 0); });
}

/*  HLS configuration options (https://github.com/video-dev/hls.js/blob/master/docs/API.md#fine-tuning)

var config = {
      autoStartLoad: true,
      startPosition: -1,
      debug: false,
      capLevelOnFPSDrop: false,
      capLevelToPlayerSize: false,
      defaultAudioCodec: undefined,
      initialLiveManifestSize: 1,
      maxBufferLength: 30,
      maxMaxBufferLength: 600,
      maxBufferSize: 60*1000*1000,
      maxBufferHole: 0.5,
      lowBufferWatchdogPeriod: 0.5,
      highBufferWatchdogPeriod: 3,
      nudgeOffset: 0.1,
      nudgeMaxRetry: 3,
      maxFragLookUpTolerance: 0.25,
      liveSyncDurationCount: 3,
      liveMaxLatencyDurationCount: Infinity,
      enableWorker: true,
      enableSoftwareAES: true,
      manifestLoadingTimeOut: 10000,
      manifestLoadingMaxRetry: 1,
      manifestLoadingRetryDelay: 1000,
      manifestLoadingMaxRetryTimeout: 64000,
      startLevel: undefined,
      levelLoadingTimeOut: 10000,
      levelLoadingMaxRetry: 4,
      levelLoadingRetryDelay: 1000,
      levelLoadingMaxRetryTimeout: 64000,
      fragLoadingTimeOut: 20000,
      fragLoadingMaxRetry: 6,
      fragLoadingRetryDelay: 1000,
      fragLoadingMaxRetryTimeout: 64000,
      startFragPrefetch: false,
      fpsDroppedMonitoringPeriod: 5000,
      fpsDroppedMonitoringThreshold: 0.2,
      appendErrorMaxRetry: 3,
      loader: customLoader,
      fLoader: customFragmentLoader,
      pLoader: customPlaylistLoader,
      xhrSetup: XMLHttpRequestSetupCallback,
      fetchSetup: FetchSetupCallback,
      abrController: AbrController,
      bufferController: BufferController,
      capLevelController: CapLevelController,
      fpsController: FPSController,
      timelineController: TimelineController,
      enableWebVTT: true,
      enableCEA708Captions: true,
      stretchShortVideoTrack: false,
      maxAudioFramesDrift: 1,
      forceKeyFrameOnDiscontinuity: true,
      abrEwmaFastLive: 3.0,
      abrEwmaSlowLive: 9.0,
      abrEwmaFastVoD: 3.0,
      abrEwmaSlowVoD: 9.0,
      abrEwmaDefaultEstimate: 500000,
      abrBandWidthFactor: 0.95,
      abrBandWidthUpFactor: 0.7,
      abrMaxWithRealBitrate: false,
      maxStarvationDelay: 4,
      maxLoadingDelay: 4,
      minAutoBitrate: 0,
      emeEnabled: false,
      widevineLicenseUrl: undefined,
      requestMediaKeySystemAccessFunc: requestMediaKeySystemAccess
  };
*/

///////////////////////
///// M3U8 LOADER /////
///////////////////////

var crack_m3u8 = function (path, data, frame, fmt)
{
  var i, j, k, b, h, w, sub, str, url, levels = [];

  if ((sub = data.split ("#EXT-X-STREAM-INF")).length < 2)
  {
    if (dloading) make_downloader ("", path); return (path + "<>");
  }

  for (i = 1; i < sub.length; i++)
  {
    k = sub[i].split ("\n"); url = k[0];

    if ((j = url.search ("BANDWIDTH")) < 0) b = 0; else
    {
      str = url.substr (j + 10); j = str.search (",");
      if (j > 0) str = str.substr (0, j); b = str * 1;
    }

    if ((j = url.search ("RESOLUTION")) < 0) w = h = 0; else
    {
      str = url.substr (j + 11); j = str.search (",");
      if (j > 0) str = str.substr (0, j); j = str.search ("x");
      h = str.substr (j + 1) * 1; w = str.substr (0, j) * 1;
    }
    levels [i-1] = { width: w, height: h, bitrate: b, url: k[1], dat: k[0] }
  }

  k = formats_m3u8 (levels); fixformat (k, frame); fmt = getformat (k, fmt);
  if ((j = argformat (fmt)) < 0 || (i = k[j] - 1) < 0) return (path + "<>0");

  if (!(fmt = levels [i].height)) fmt = pixformat (j);
  url = levels [i].url; url = merge_url (path, url) + url;

  audio = sub [0]; k = levels [i].dat.search ("AUDIO=");
  sub = audio.split ("#EXT-X-MEDIA");

  for (i = 1, j = -1; i < sub.length; i++)
  {
    audio = sub[i];
    if (audio.search ("TYPE=AUDIO") < 0) continue;
    if (audio.search ("DEFAULT=YES") < 0 && k < 0) continue;
    if ((j = audio.search ('URI="')) > 0) break;
  }

  if (j < 0) audio = ""; else
  {
    audio = audio.substr (j + 5);
    audio = audio.substr (0, audio.search ('"'));
    audio = merge_url (path, audio) + audio;
  }

  if (dloading) make_downloader (audio, url);
  if (audio) return (path + "<>0"); else return (url + "<>" + fmt);
}
////////////////////

var formats_m3u8 = function (levels)
{
  var i, j, k, w, h, b, f = [0,0,0,0,0,0,0,0], p = [0,0,0,0], r = [0,0,0,0];

  if (!levels || !levels.length) return (f);

  for (i = 0; i < levels.length; i++)
  {
    if (!(w = levels[i].width)) w = 0;
    if (!(h = levels[i].height)) h = 0;
    if (!(b = levels[i].bitrate)) b = 0;

    if (!h) if ((b -= 175000) < 0) continue; else
    { h = Math.trunc (Math.sqrt (b * 0.2)); b = -1 } else
    { if (b) b -= w * h * 2 + 250000; if (b > 0) b *= 3; else b *= -2; }

    if ((j = chkformat (h)) < 0 || (b < 0 && r[j])) continue;

    k = ((b >= 0 && !r[j]) || (p[j] == h && b < r[j]));
    if (k || p[j] < h) { f[j] = i + 1; p[j] = h; r[j] = b + 1; }
  }

  if (f[1] && p[0] < 240) f[0] = 0; return (f);
}
////////////////////

var merge_url = function (path1, path2)
{
  var url = "", sub, str, i, j, k;

  if (path2.search ("http") == 0) return "";

  if ((k = path1.search ("\\?")) < 0) k = path1.length;
  sub = path1.substr (0, k).split ("/"); str = path2.split ("/");

  if (str[0] == "") k = str.length; else k = 1;
  j = sub.length - k; if (j < 3) j = 3;

  for (i = 0; i < j; i++) url = url + sub [i] + "/";

  if (k > 1) url = url.substr (0, url.length - 1);

  return url;
}
////////////////////

//////////////////////
///// DOWNLOADER /////
//////////////////////

var open_downloader = function ()
{
  var downloader = window.open ();
  downloader.document.write (download_doc);
  downloader.document.close ();
}
////////////////////

var make_downloader = function (aud, vid)
{
  var scrip = "cancel=function(x){document.getElementsByTagName('button')[0].value='';}";

  var bstyle = "<body style='margin:0;padding:0;text-align:center;" +
    "background-color:cornflowerblue;color:yellow;font-size:20px'" +
    " onunload='javascript:cancel()'>";

  var istyle = "<input type=text size=10 disabled style='" +
    "background-color:transparent;color:white;font-size:18px;" +
    "font-family:inherit;text-align:right;border:none'>";

  var insert = "<!DOCTYPE html><head><title>Download</title></head>" + bstyle +
    "<div style='width:0;height:100%;position:absolute'></div>" +
    "<h1 style='color:sandybrown;margin-top:12px'>" + dloading + "</h2>" +
    "Audio Progress : &nbsp;&nbsp; " + istyle + "<p></p>" +
    "Video Progress : &nbsp;&nbsp; " + istyle + "<p></p><br>" +
    "<button onclick='javascript:cancel()' value='" + dloading + "'>Cancel</button>" +
    "<script\>var " + scrip + "</script\>";

  var specs = "width=400,height=240,top=100,left=100";
  var win = window.open ("about:blank", "", specs), doc = win.document;
  win.focus(); doc.open(); doc.write (insert); doc.close(); doc = doc.body;

  doc.onfocus = function()
  { 
    doc.onfocus = function() {};
    var h = 240 - doc.firstChild.clientHeight;
    var w = 400 - doc.clientWidth; win.resizeBy (w, h);
    download_m3u8 (win, doc, aud, vid);
  }
}
////////////////////

const download_m3u8 = async (win, doc, aud, vid) =>
{
  var i, j, k, resp, data, str, url, header;
  var src, sub, name, count, errors, msg = "DONE";

  var button = doc.getElementsByTagName ("button")[0];
  var status = doc.getElementsByTagName ("input");
  status[0].value = aud ? "Pending" : "No Track";
  status[1].value = vid ? "Pending" : "No Track";

  var fname = "+" + button.value;
  if (cookies [fname]) { button.innerText = "GO AWAY"; return; }
  cookies [fname] = "ok";

try { for (i = 0; i < 2; i++)
{ 
  name = fname + (i ? "-vid" : "-aud");
  try { resp = await fetch (name, { method: 'PUT' } ); } catch(e) { resp = ""; }
  if (!resp || resp.status != 200) throw ("Error writing file");
  src = i ? vid : aud; if (!src) continue;

  for (k = 1; k < 5; k++)
  {
    try { resp = await fetch (src);
          data = await resp.text(); } catch(e) { resp = ""; }
    if (resp && resp.status == 200) break;
    if (k > 3) throw ("Error loading m3u8");
  }
  k = data.search ("#EXT-X-ENDLIST"); if (k < 0) k = data.length;
  sub = data.substr (0, k).split ("#EXTINF:"); count = errors = 0;

  for (j = 1; j < sub.length; j++)
  {
    url = ""; header = {}; str = sub [j].split ("\n");
    for (k = str.length - 1; k > 0; k--)
    {
      if (!str [k]) { str.splice (k, 1); continue; }
      if (!url && str [k][0] != "#") url = str [k];
    }
    if (!url) continue; url = merge_url (src, url) + url;

    if ((k = str [1].search ("#EXT-X-BYTERANGE:")) >= 0)
    {
      str = str [1].substr (k + 17).split ("@");
      k = str [0] * 1 + str [1] * 1 - 1; str = str [1] + "-" + k;
      header = { headers: { Range: "bytes=" + str }}; 
    }
    for (k = 1; k < 5; k++)
    {
      if (!button.value) throw ("STOPPED");
      try { resp = await fetch (url, header);
            data = await resp.arrayBuffer(); } catch(e) { resp = ""; }
      if (resp && (resp.status == 200 || resp.status == 206))
      {
        await fetch ("~+" + name, { method: 'PUT', body: data } );
        status[i].value = ++count + " of " + (sub.length - 1);
        if (errors > 0) errors--; break;
      }
      if (k > 3)
      {
        console.log ("Error loading segment " + j + " in " + name);
        if (++errors > 2) throw ("Server not responding");
      }
    }
  }
} } catch (err) { msg = err; }

  button.innerText = msg; cookies [fname] = "";
}

</script>

<!--
////////////////////////////////
///// Custom Video Control /////
////////////////////////////////
//-->

<!-- This element must be cloned and inserted into a video frame. -->

<div id="video_control" style="display:none">

<div class="v-control">
  <input type="range" value="1" min="0" max="1" step="0.01" style="width:calc(100% - 238px);margin-bottom:5px">
  <span><input type="text" class="v-misc" value="1.0" style="width:30px"></span>
  <input type="text" style="width:72px;color:azure;background-color:transparent" disabled="disabled">
  <input type="text" style="width:72px;color:azure;background-color:transparent" disabled="disabled">
  <br>
  <span class="play-lft"></span><span class="play-ctr"></span><span class="play-rgt"></span>
  <span class="t-alpha t-alpha2" style="width:30px">Mute</span>
  <input type="range" value="1" min="0" max="1" step="0.05" style="min-width:40px;max-width:216px">
  <span class="t-alpha t-alpha2" style="width:30px">Seek</span>
  <input type="text" value="0:0:0" style="width:76px;margin-right:2px">
  <span><input type="text" class="v-seek" style="width:18px" value="5s"></span>
  <span><input type="text" class="v-seek" style="width:24px" value="15s"></span>
  <span><input type="text" class="v-seek" style="width:18px" value="1m"></span>
  <span><input type="text" class="v-seek" style="width:18px" value="2m"></span>
  <span><input type="text" class="v-seek" style="width:18px" value="5m"></span>
  <span><input type="text" class="v-seek" style="width:24px" value="10m"></span>
  <span><input type="text" class="v-misc" style="width:12px" value="B"></span>
  <span><input type="text" class="v-misc" style="width:12px" value="S"></span>
  <span class="t-alpha" style="width:8px;margin-left:2px">F</span>
  <span class="t-alpha" style="width:8px">R</span>
  <span class="t-alpha" style="width:14px">FS</span>
</div>

<style type="text/css">

.v-control {
  position: absolute; text-align: center;
  bottom: 0; width: calc(100% - 8px);
  margin: 0; padding: 4px 4px 4px 4px;
  font-size: 14px; line-height: 17px;
  font-family: 'segoe ui', serif;
  background-color: steelblue; cursor: default;
  user-select: none;
}

.v-control input {
  appearance: none; -moz-appearance: none; -webkit-appearance: none;
  height: 13px; text-align: center; vertical-align: top;
  padding: 1px 3px 1px 3px; margin: 2px 1px 3px 1px;
  border: 1px solid darksalmon; border-radius: 7px;
  font-size: 14px; line-height: 13px;
  font-family: 'consolas', 'lucida console', monospace;
  color: darkviolet; background-color: lightpink;
  user-select: auto;
}

.v-control input::-moz-range-thumb {
  -moz-appearance: none;
  width: 4px; height: 19px;
  background: greenyellow;
  border: none; border-radius: 0;
}

.v-control input::-webkit-slider-thumb {
  -webkit-appearance: none;
  width: 4px; height: 19px;
  background: greenyellow;
  border: none; border-radius: 0;
}

.v-control input::selection {
  color: yellow; background-color: orchid;
}

.v-control span {
  cursor: pointer;
}

input.v-seek {
  pointer-events: none; margin-left: 0; margin-right: 0;
  border-width: 1px 6px 1px 6px; border-color: mediumseagreen;
  border-radius: 4px; color: oldlace; background-color: mediumslateblue;
}

input.v-misc {
  pointer-events: none; margin-right: 0;
  border-width: 1px 6px 1px 6px; border-color: lightseagreen;
  border-radius: 5px; color: lightyellow; background-color: mediumpurple;
}

.t-alpha {
  display: inline-block; vertical-align: middle;
  padding: 0 3px 1px 3px; margin: 0 0 0 -1px;
  color: yellow; background-color: mediumpurple;
}

.t-alpha2 {
  padding: 0 4px 1px 4px; margin: 0; font-style: italic;
}

.play-lft {
  display: inline-block; vertical-align: top; cursor: pointer;
  width: 0; height: 0; margin: 1px 0 0 0;
  border-style: solid; border-width: 9px 6px 9px 0px;
  border-color: transparent yellow transparent yellow;
}

.play-ctr {
  display: inline-block; vertical-align: top; cursor: pointer;
  width: 0; height: 0; margin: 0;
  border-style: solid; border-width: 9px 2px 9px 2px;
  border-color: transparent;
}

.play-rgt {
  display: inline-block; vertical-align: top; cursor: pointer;
  width: 0; height: 0; margin: 1px 1px 0 0;
  border-style: solid; border-width: 9px 0px 9px 6px;
  border-color: transparent yellow transparent yellow;
}

.pause-lft {
  height: 16px; margin: 2px 0 0 2px;
  border-width: 0 2px 0 2px;
}

.pause-rgt {
  height: 16px; margin: 2px 3px 0 0;
  border-width: 0 2px 0 2px;
}

.anim-bar {
  animation-name: waiting;
  animation-delay: 5s;
  animation-duration: 2.5s;
  animation-fill-mode: both;
  animation-direction: normal;
  animation-timing-function: linear;
  animation-iteration-count: infinite;
}

@keyframes waiting {
   0%  { background-color: lightpink; }
  30%  { background-color: lightpink; }
  70%  { background-color: salmon; }
 100%  { background-color: lightpink; }
}

</style></div>

<script>  // Video control script. NOT inserted into a video frame.

var create_controls = function (vid, popup, w, h)
{
  // kludge to fix wrong popup window dimensions
  if (popup) popup.resizeBy (w - vid.clientWidth, h - vid.clientHeight);

  var control = document.getElementById ("video_control");
  control = control.cloneNode (true);
  control.style.display = "inline-block";

  var doc = control.firstElementChild;  // video control
  doc.onclick     = function(e) { vid_event (e); }
  vid.onmousemove = function(e) { vid_event (e); }
  doc.onmouseleave = function() { vid_cntrl (vid, 0); }
  doc.onmouseenter = function() { vid_cntrl (vid, 1); }

  var sib = doc.children;  // video control elements
  sib [0].onchange = function() { vid_click (this, 1); }
  sib [8].onclick  = function() { vid_click (this, 2); }
  sib [9].onchange = function() { vid_click (this, 3); }
  sib [10].onclick = function() { vid_click (this, 4); }
  sib [20].onclick = function() { vid_click (this, 5); }
  sib [21].onclick = function() { vid_click (this, 6); }
  sib [22].onclick = function() { vid_click (this, 7); }

  vid.onended      = function() { vid_cntrl (this, 1); }
  vid.onclick      = function() { vid_cntrl (this, 2); }
  vid.onplay       = function() { vid_cntrl (this, 3); }
  vid.onpause      = function() { vid_cntrl (this, 4); }
  vid.onseeking    = function() { vid_cntrl (this, 5); }
  vid.onwaiting    = function() { vid_cntrl (this, 6); }
  vid.onstalled    = function() { vid_cntrl (this, 7); }
  vid.ontimeupdate = function() { vid_cntrl (this, 8); }

  doc = vid.parentNode;  // document body
  doc.onresize = function() { vid_resize (vid); }
  doc.onfullscreenchange = function() { vid_cntrl (vid, 9); }

  sib [0].classList.add ("anim-bar");
  vid.checked = 0; vid_rotate (vid, sib, -1);
  doc.appendChild (control); vid_resize (vid);
}
////////////////////

var vid_error = function (vid)
{
  var ctr = vid.nextElementSibling.firstElementChild, sib = ctr.children;
  vid.disabled = true; vid.style.cursor = "default"; ctr.style.display = "initial";
  sib [0].classList.remove ("anim-bar"); sib [0].style.background = "crimson";
  sib [2].value = "ERROR"; sib [3].value = "!!!!!";
}

var vid_cntrl = function (vid, mode)
{
  var ctr = vid.nextElementSibling.firstElementChild, sib = ctr.children;
  if (ctr.value == undefined && mode > 2 && mode < 8) return;
  if (vid.disabled && mode != 2 && mode != 9) return;

  var t = vid.currentTime, d = vid.duration;
  if (isNaN (t)) t = 0; if (isNaN (d) || !isFinite (d)) d = 0;
  var z = (t > 0 && d > 0) ? 400 * t / d : 0; z = Math.round (z) * 0.25;

  var no_action = ctr.value == undefined || vid.disabled;
  var got_video = vid.videoWidth && vid.videoHeight;

  if (mode == 0)  // hide
  {
    ctr.disabled = false; if (no_action) return;
    ctr.value = 4; if (vid.paused && got_video) ctr.style.display = "none";
  }
  if (mode == 1)  // show
  {
    ctr.disabled = true; if (no_action) return;
    ctr.value = 0; ctr.style.display = "initial";
  }
  if (mode == 2)  // play/pause
  {
    if (no_action) { if (vid.value) popper (vid.value, 4); return; }
    vid.style.cursor = "default"; if (vid.paused) vid.play(); else vid.pause();
    if (!ctr.disabled && !got_video) ctr.style.display = "none";
  }
  if (mode == 3)  // is playing
  {
    mode = 10; if (vid.value) popper (vid.value, 3);
    // special case of video paused at video start
    if (!ctr.disabled && ctr.value <= 0) ctr.value = 1 - ctr.value;
  }
  if (mode == 4)  // is paused
  {
    mode = 10; if (vid.value) popper (vid.value, 4);
    // special case of video paused while doing countdown or countup
    if (!ctr.disabled && ctr.value) { ctr.style.display = "none"; ctr.value = 0; }
  }
  if (mode == 5)  // is seeking
  {
    sib [0].style.background = "linear-gradient(90deg, coral " + z + "%, sandybrown 0%)";
  }
  if (mode == 6)  // is waiting
  {
    sib [0].style.background = "linear-gradient(90deg, coral " + z + "%, sandybrown 0%)";
    setTimeout (function() { vid_timer (vid, ctr, t); }, 2000);
  }
  if (mode == 7)  // is stalled
  {
    sib [0].style.background = "linear-gradient(90deg, deeppink " + z + "%, hotpink 0%)";
    setTimeout (function() { vid_timer (vid, ctr, t); }, 2000);
  }

  if (mode == 8)  // time update
  {
    if (t == vid.checked) return; vid.checked = t;
    var v = ctr.value, ts = Math.round (t), ds = Math.round (d);
    var th = Math.trunc (ts / 3600), dh = Math.trunc (ds / 3600); ts -= th * 3600; ds -= dh * 3600;
    var tm = Math.trunc (ts / 60), dm = Math.trunc (ds / 60); ts -= tm * 60; ds -= dm * 60;

    sib [0].style.background = "linear-gradient(90deg, skyblue " + z + "%, transparent 0%)";
    sib [2].value = th + ":" + (tm < 10 ? "0" : "") + tm + ":" + (ts < 10 ? "0" : "") + ts;
    sib [3].value = dh + ":" + (dm < 10 ? "0" : "") + dm + ":" + (ds < 10 ? "0" : "") + ds;

    if (v != undefined) v = v * 1; else
    {
      v = (vid.paused || ctr.disabled) ? -5 : 6;
      mode = 10; sib [0].classList.remove ("anim-bar");
    }
    if (v > 0 && !--v) { if (got_video) ctr.style.display = "none"; v = -5; }
    if (v < 0 && !++v) vid.style.cursor = "none"; ctr.value = v;
  }

  if (mode == 9)  // fullscreen change
  {
    var fullscreen = ctr.parentNode.disabled;
    sib [22].style.outline = fullscreen ? "none" : "1px solid orange";
    ctr.parentNode.disabled = fullscreen ? false : true; vid_resize (vid);
    if (!no_action) { ctr.value = -8; ctr.disabled = false; ctr.style.display = "none"; }
  }

  if (mode == 10)
  {
    if (!vid.paused)
      { sib [5].classList.add ("pause-lft"); sib [7].classList.add ("pause-rgt"); } else
      { sib [5].classList.remove ("pause-lft"); sib [7].classList.remove ("pause-rgt"); }
  }
}
////////////////////

var vid_timer = function (vid, ctr, time)  // catch wait/stall false flags
{
  if (vid.currentTime == time)
  {
    if (!ctr.disabled) ctr.value = 4; ctr.style.display = "initial";
  }
}

var vid_click = function (item, mode)
{
  var ctr = item.parentNode, vid = ctr.parentNode.previousElementSibling;

  if (mode == 1)
  {
    var t = vid.duration * item.value; if (t < 0.5) t = 0.5; vid.currentTime = t;
    if (!isNaN (t) && isFinite (t)) ctr.children [11].value = t.toFixed(2);
  }

  if (mode == 2) item.style.outline = (vid.muted = !vid.muted) ? "1px solid orange" : "none";

  if (mode == 3) { vid.muted = true; vid.volume = item.value; vid.muted = false; }

  if (mode == 4)
  {
    var v = ctr.children[11].value.split (":"), i, j = v.length; if (!j) return;
    var t = v[0][0]; if (t == "-") t = -1; else if (t == "+") t = 1; else t = 0;
    if (t) v[0] = v[0].substr(1);

    i = v[j-1] * 1; if (j > 1) i += v[j-2] * 60; if (j > 2) i += v[j-3] * 3600;
    if (t) { i *= t; i += vid.currentTime; }

    if (i < 0.5) i = 0.5; if (i > vid.duration) i = vid.duration; vid.currentTime = i;
  }

  if (mode == 5) vid_rotate (vid, ctr.children, 0);

  if (mode == 6) vid_rotate (vid, ctr.children, 1);

  if (mode == 7) if (!ctr.parentNode.disabled)
    vid.parentNode.requestFullscreen(); else vid.parentNode.parentNode.parentNode.exitFullscreen();
}
////////////////////

var vid_event = function (event)
{
  var item = event.target, node = item.nodeName, pop = item.parentNode;

  if (node == "VIDEO")  // show controls
  {
    var ctr = item.nextElementSibling.firstElementChild, h = item.step;
    item.style.cursor = "default"; if (ctr.value == undefined) return;
    h = h ? h * 1 : 0; h = (h & 2) ? item.clientWidth : item.clientHeight;
    if (ctr.value <= 0) ctr.value = -8; if (event.clientY > h - 50) vid_cntrl (item, 1);
  }
  if (node != "SPAN") return;

  var vid = pop.parentNode.previousElementSibling;
  var cls = item.classList; if (cls) cls = cls [0];

  if (cls) { if (cls.substr (0,5) == "play-") vid_cntrl (vid, 2); return; }

  var dir = (event.clientX < item.offsetLeft + item.offsetWidth / 2) ? -1 : 1;
  var sib = item.children [0], txt = sib.value, speed = txt * 1;

  if (speed)
  {
    speed += dir * 0.1; if (speed > 0.4) speed += dir * 0.1;
    if (speed > 2) speed += dir * 0.3; if (speed < 0.1) speed = 0.1; if (speed > 5) speed = 5;
    sib.value = speed.toFixed(1); vid.playbackRate = speed; return;
  }

  if (txt == "B") { vid_filter (vid, dir, 0); return; }
  if (txt == "S") { vid_filter (vid, dir, 1); return; }

  if (txt == "5s" ) dir *= 5;
  if (txt == "15s") dir *= 15;
  if (txt == "1m" ) dir *= 60;
  if (txt == "2m" ) dir *= 120;
  if (txt == "5m" ) dir *= 300;
  if (txt == "10m") dir *= 600;

  if ((dir += vid.currentTime) < 0.5) dir = 0.5;
  vid.currentTime = dir > vid.duration ? vid.duration : dir;
}
////////////////////

var vid_resize = function (vid)
{
  var i, j = 0, k, h, w = vid.step; w = w ? w * 1 : 0;
  h = (w & 2) ? vid.clientWidth : vid.clientHeight;
  w = (w & 2) ? vid.clientHeight : vid.clientWidth;
  var ctr = vid.nextElementSibling.firstElementChild, sib = ctr.children;

  h = (h / screen.height) * 10; h = ctr.parentNode.disabled ? 11 : Math.round (h) - 1;
  ctr.style.paddingBottom = h > 5 ? h + "px" : ctr.style.paddingTop;
  sib [0].style.minWidth = (w > 260 && w < 380 ? w - 192 : 68) + "px";
  sib [1].style.display = w < 380 ? "none" : "inline-block";

  var sizes = [0,0,0,0,0,0,0,0,0,0,38,87,36,42,36,36,36,42,31,31,0,0,0];
  var scale = [0,0,0,0,0,0,0,0,0,0, 6, 6, 8, 7, 5, 2, 4, 1, 3, 3,0,0,0];
  var block = [606,0,0,0,0,0,0,0,0];

  for (i = 0; i < sib.length; i++) if (k = scale [i]) block [k] += sizes [i] + 4;
  if ((w -= block [0]) < 80) for (j = 1; j < block.length; j++) if ((w += block [j]) >= 80) break;
  if (j > 5) for (i = 5; i > 3; i--) if (w - block [i] > 80) { w -= block [i]; block [i] = 0; }
  sib [9].style.width = w + "px";

  for (i = 0; i < sib.length; i++) if (k = scale [i])
    sib [i].style.display = (!block [k] || j < k) ? "inline-block" : "none";
}
////////////////////

var vid_rotate = function (vid, sib, mode)
{
  var x = vid.step; if (!x || x < 0) x = 0;
  if (mode == 0) x ^= 1; if (mode > 0) x += 2;
  vid.step = x = x & 7; var r = (x >> 1) * 90;

  vid.style.transform = "rotate(" + r + "deg)" + (x & 1 ? " scaleX(-1)" : "");

  sib [20].style.outline = x & 1 ? "1px solid orange" : "none";
  sib [21].style.outline = x > 1 ? "1px solid orange" : "none";

  if (x & 2)
  {
    vid.style.top = "calc(50vh - 50vw)";
    vid.style.left = "calc(50vw - 50vh)";
    vid.style.width = "100vh";
    vid.style.height = "100vw";
  }
  else
  {
    vid.style.top = vid.style.left = "0";
    vid.style.width = vid.style.height = "100%";
  }
}
////////////////////

var vid_filter = function (vid, dir, mode)
{
  var n, s, con, lvl, sat, filter = vid.style.filter;

  if (!filter) lvl = sat = 1; else
  {
    if ((n = filter.search ("brightness")) < 0) lvl = 1; else
      { s = filter.substr (n + 11); s = s.substr (0, s.search ("\\)")); lvl = s * 1; }
    if ((n = filter.search ("saturate")) < 0) sat = 1; else
      { s = filter.substr (n + 9); s = s.substr (0, s.search ("\\)")); sat = s * 1; }
  }
  sat = sat / (3 - lvl) * 2; if (mode) sat += dir * 0.1; else lvl += dir * 0.05;
  sat = sat * (3 - lvl) / 2; con = (2 - lvl * (3 - lvl)) * (2.5 - sat) + 1;

  lvl = lvl.toFixed (3); con = con.toFixed (3); sat = sat.toFixed (3);
  vid.style.filter = "brightness(" + lvl + ") contrast(" + con + ") saturate(" + sat + ")";
}

</script>

 
</body></html>